<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>浅悠悠的个人博客</title>
  
  <subtitle>When there is no sunshine,talking to the moon.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://qianyouyou.cn/"/>
  <updated>2025-06-22T14:09:21.188Z</updated>
  <id>http://qianyouyou.cn/</id>
  
  <author>
    <name>王骏</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>梦的破壁者：输出型爱好  ——论白日梦的因果重塑</title>
    <link href="http://qianyouyou.cn/2025/06/08/2025-06-08/"/>
    <id>http://qianyouyou.cn/2025/06/08/2025-06-08/</id>
    <published>2025-06-07T21:12:50.000Z</published>
    <updated>2025-06-22T14:09:21.188Z</updated>
    
    <content type="html"><![CDATA[<h3 id="第一幕：白日梦的甜蜜沼泽——当因果链断裂时"><a href="#第一幕：白日梦的甜蜜沼泽——当因果链断裂时" class="headerlink" title="第一幕：白日梦的甜蜜沼泽——当因果链断裂时"></a><strong>第一幕：白日梦的甜蜜沼泽——当因果链断裂时</strong></h3><p>晨光斜照书案时，我常盯着茶杯里浮沉的叶片怔忡——倘若此刻突然继承一笔神秘遗产，该购置林间木屋还是环球船票？这般念头如露水般在脑际闪烁，又随水汽蒸发无踪。这便是典型的白日梦境：<strong>愿望如烟花盛放于高空（果），却因行动之引信从未点燃（因），构成典型的”断桥式幻想”，终成虚妄的因果悖论。</strong></p><p>人总是痴迷于果，却怠慢于因。譬如幻想中彩票的狂喜，却从不踏足彩票站；渴慕登台领奖的荣光，却拒绝伏案磨砺的孤寂。白日梦便在这因果的裂隙中滋生，它悬于现实之上，如海市蜃楼般诱人，脚下却无寸土可依。它是一场颅内盛宴，以虚妄的甘霖浇灌干涸的渴望，却终究结不出可摘的果实。无用之用，固有其玄妙——庄子观鱼之乐，嵇康锻铁之闲，皆在功利之外开辟精神的自留地。然今日之”白日梦”，常沦为逃避行动的精致借口，沉溺于虚幻的”果”，而主动割裂了耕耘的”因”。此等梦境，终究是镜花水月，徒耗心神。 </p><p>古人称其为”黄粱美梦”，书生卢生枕青瓷入眠，梦中登科拜相，醒时灶上黍米未熟。现代心理学却揭示其本质：<strong>白日梦是欲望的镜像迷宫，我们在其中反复推演”倘若…就…”的虚拟剧本</strong>，却吝于在现实舞台迈出第一步。恰似渴盼中彩票者从不购彩，向往琴艺者永不触弦——当”因”的土壤始终荒芜，”果”的枝桠便只能寄生在意识的云端。</p><p>这种断裂在当代生活比比皆是：</p><ul><li>书架囤积三百本写作教程却从未提笔的”知识收藏家”</li><li>深夜收藏健身视频却在晨光中点击”稍后再练”的都市人</li><li>孩子能背诵课文却无法讲解错题的”沉默优等生”</li></ul><p>当”因”的土壤持续荒芜，”果”的枝桠只能寄生在意识的云端。心理学实验显示，长期沉溺此类幻想者，大脑会分泌大量多巴胺制造虚假满足，而前额叶皮层（负责执行功能的区域）活跃度持续降低——这正是行动力瘫痪的神经学根源。正如中国古代”黄粱美梦”的寓言 ，<strong>虚幻的因果演绎越是华丽，现实的行动根基越是脆弱</strong>。 </p><h3 id="第二幕：断桥修复术——无用之用的哲学启示"><a href="#第二幕：断桥修复术——无用之用的哲学启示" class="headerlink" title="第二幕：断桥修复术——无用之用的哲学启示"></a><strong>第二幕：断桥修复术——无用之用的哲学启示</strong></h3><p>要破解这一困局，需重返庄周梦蝶的哲学现场。当庄子质疑”不知周之梦为胡蝶与？胡蝶之梦为周与？”时，他揭示的不仅是认知相对论，更暗含存在转化的密钥：梦与醒的辩证统一，需通过”物证”实现连接。</p><ul><li><p><strong>物证转化案例</strong></p><p>19世纪巴黎的阁楼里，巴尔扎克将暴富妄想转化为《人间喜剧》的青铜群像；史铁生把”健康幻想”转化为对生死界限的勘探因而写成《务虚笔记》与《病隙碎笔》；罗翔将“完美法治”的执念解构为“圆圈正义”的谦卑认知而著成《法律的悖论》。这些实践印证了萨特的存在主义哲学：”人不是其所是，而是其所成”。当我们把彩票幻想转化为一张手绘彩票设计图，把环球旅行空想拆解为异国文化研究笔记——虚幻之果（what if）便倒逼实在之因（to do）。</p></li><li><p><strong>无用之用的现代显影</strong></p><p>日本匠人秋山利辉要求学徒每日绘制”器物灵魂草图”——这些看似与家具制作无关的线条练习（无用之果），需持续八年方准入技术研修（实在之因）。当草图积累逾万张时，学徒对木材肌理的感知力已融入血脉。 时间给他的复利回报，秋山工坊的学徒中，37%自立门户成为国宝级匠人，其作品被大英博物馆永久收藏。这种”以无用手训育有用之技”的模式，恰是庄子”无用之大用”的当代诠释——看似务虚的幻想，恰是创造的胚胎。</p></li></ul><p>庄周梦蝶的”物化”哲学在此显出新解：<strong>梦与醒的边界本是流动的，致命分野在于是否留下”物证”。</strong>蝶舞翩跹终随晨光消散，但若将蝶影绘于绢帛、谱入琴曲，虚幻的振翅便化作可触摸的翅痕。此谓”无用之用”的大用：看似务虚的幻想，恰是创造的胚胎。</p><p>此刻我们触及核心命题：<strong>所有可持续的创造，本质是因果链的重构工程。</strong>当陀思妥耶夫斯基赌轮盘还清债务的妄想（果）催生《赌徒》小说创作（因），当稿纸堆积（因）成就文学巨匠（果）——新的因果闭环便取代了断裂的幻想链。</p><h3 id="第三幕：输出型爱好——为幻想铸造青铜骨骼"><a href="#第三幕：输出型爱好——为幻想铸造青铜骨骼" class="headerlink" title="第三幕：输出型爱好——为幻想铸造青铜骨骼"></a>第三幕：输出型爱好——为幻想铸造青铜骨骼</h3><p>经济学中有道残酷公式：<strong>回报率 = 本金 × 收益率 × 时间</strong>。若输出值为零，整个等式即刻崩塌。至此我们看清核心公式：<strong>生命效能=（输入×转化率）×输出频次</strong>。当转化率趋近于零时，百万字的阅读量也不过是意识的泥石流。 这解释了为何囤积千本书籍的脑库不如撰写三篇笔记的心灵丰盈——前者如雨水积于死潭，后者似溪流催动水车。</p><p>我们常误将消费当创作：刷百条短视频称”学习影像叙事”，听万首歌曲谓”钻研乐理”。然则梭罗在《瓦尔登湖》中早有点破：”我步入丛林，因为我希望生活得有意义，我希望活的深刻，并汲取生命中所有的精华。然后从中学习，以免让我在生命终结时，却发现自己从来没有活过。”真正有效的阅读，是文字与生命经验发生的化合反应。</p><p>那些被浪漫化的”白日梦想家”，若只耽于颅内风暴而手无一物，其梦想不过是精致的废墟。真正的梦想家如凡尔纳笔下的尼摩船长，其海底两万里的瑰丽幻想，根植于对海洋学、工程学的深厚输入，更在小说这一载体中实现了磅礴的输出。幻想若不能借由某种形式显影于世，终究是幽闭密室里的独舞，其光不耀，其热不传。当输入如江河奔涌，却无一道闸门引导其倾泻，这丰沛的积累便只能在体内淤积、腐化，最终回报率为零。我们消费海量信息，聆听万千道理，若止步于此，不过是在意识的仓库里囤积了一堆未曾拆封的珍宝，蒙尘且无用。 </p><p>输入是采撷星光，输出才是铸造星座。此时，”输出型爱好”便显现其非凡价值。它非为换取世俗功利的工具，而是为奔涌的思绪开凿河道，让无形的精神能量获得具象的骨相。写作、绘画、摄影、手工、编程、演讲……凡此种种，皆是将灵魂印记拓印于世的技艺。此般爱好，本质上是主动与世界建立深度联结的管道——它迫使混沌的思绪在输出中澄澈，让私密的感动在分享中共振。如木工大师经年累月的敲打，从爱好者蜕变为传承者；如咖啡师荣姐由分享早餐美学而衍生出产品变现与商拍邀约；如设计师春春通过朋友圈输出作品，倒逼输入精进，终成独特风格的开创者。输出，赋予热爱以复利的翅膀。</p><p>《白日梦想家》更擅此道：沃尔特·米蒂（电影《白日梦想家》主角）从直升机跃入冰海追摄雪豹的瞬间，正是将脑海冒险投射为胶片的因果渡越。当幻想不再是思维的蒲公英，而是扎根于输出行为的种子——摄影机是锹，暗房是沃土，展览馆便是破土的苗圃。</p><h3 id="第四幕：破壁法则——在因果链上播种的农艺"><a href="#第四幕：破壁法则——在因果链上播种的农艺" class="headerlink" title="第四幕：破壁法则——在因果链上播种的农艺"></a>第四幕：破壁法则——在因果链上播种的农艺</h3><p>如何将飘渺的白日梦锻造成可触的输出？不妨借科学之刃雕琢幻想之玉：</p><ol><li><strong>以WOOP之法锚定虚幻</strong>： 德国心理学家Oettingen的”心理对照”（Mental Contrasting）提供路径——Wish（明确愿望）、Outcome（想象结果）、Obstacle（预见障碍）、Plan（制定对策）。幻想中彩票者，若用此法，必先自问：阻碍何在？是未曾购买？是选号无方？对策为何？是每周定额投入？是研究概率策略？此法在幻想与现实间架设理性之桥，让白日梦成为行动蓝图而非麻醉剂。</li><li><strong>择一事深耕，为输出赋形</strong>： 兴趣是火种，输出是燃炉。内向者可执笔为矛（写作、编程），外向者能发声为剑（演讲、视频）。不必贪多，择一契合天赋与热情之事：善思者写作，善察者摄影，善言者播客，善工者手作。如范范所倡：确定领域、制定计划、多渠道分享。写作不必鸿篇巨制，从百字日记开始；摄影无需昂贵器材，手机镜头亦能捕捉光影真意。工具仅为载体，核心在表达的冲动与持续的实践。</li><li><strong>以行动为针，缝合因果裂隙</strong>： 吸引力法则非玄学空想，其核心在于”量子行动”——幻想触发灵感，灵感催生最小行动，行动收获反馈，反馈驱动修正。白日梦若仅止步于”想”，便是无根之萍；唯有”做”，才能将”因”植入现实土壤。如陶艺家揉捏第一块陶土，程序员敲下第一行代码，写作者写出第一个句子——微小的行动，是打破虚幻与现实壁垒的锤击。行动中自会遭遇瓶颈，此时反馈如明镜：读者评论、观众反应、作品滞销皆是指路牌。调整非失败，而是路径的优化，如演讲者从听众眼神中调整节奏，写作者从退稿信中磨砺笔锋。</li><li><strong>在时间的长河中淘洗真金</strong>： 输出型爱好的回报，非即时兑现的快钱，而是”复制类职业”的长期复利。转换类职业（如按件计酬的工人）以时间换生存资料；复制类职业（如作家、程序员）则以一次高质量输出，撬动时间的杠杆，让作品在流通中持续增值。当写作凝结成书，代码封装为软件，摄影汇聚成集，手艺沉淀为品牌，其能量便能超越个体生命的时限，在更广阔的空间与时间里回响。此过程需如匠人般的沉潜与耐心，”事缓则圆，静待花开”。</li></ol><h3 id="终幕：在现实的砧板上锻打星辰"><a href="#终幕：在现实的砧板上锻打星辰" class="headerlink" title="终幕：在现实的砧板上锻打星辰"></a>终幕：在现实的砧板上锻打星辰</h3><p>每个孩童都曾是白日梦的富矿者，直到成人世界为其贴上”不切实”的封条。然纵观文明长河：凡·高在阿尔勒的艳阳下幻想旋涡星空，却以油彩将其凝成《星月夜》；曹雪芹于”举家食粥”间追忆旧日繁华，终将幻梦淬炼为《红楼梦》的玉璧。</p><p>白日梦本无罪，它是人类心智对庸常的温柔叛离，对可能性的诗意勘探。然若任其飘荡于虚空中，终将耗散于无形。唯有以”输出”为引信，才能点燃幻想深处的能量，将飘渺的蜃楼锻造成可栖居的精神家园。当我们提笔、举镜、运刀、编码、发声——每一次输出的动作，都是对虚无的抵抗，对存在的确证。那些在时间里埋下的种子，终将在专注的汗水中破土，将个体的微光，汇聚成照亮人间角落的星辰。无用之用，至此方为大用；白日梦想家，至此才真正拥有了大地上的居所。 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;第一幕：白日梦的甜蜜沼泽——当因果链断裂时&quot;&gt;&lt;a href=&quot;#第一幕：白日梦的甜蜜沼泽——当因果链断裂时&quot; class=&quot;headerlink&quot; title=&quot;第一幕：白日梦的甜蜜沼泽——当因果链断裂时&quot;&gt;&lt;/a&gt;&lt;strong&gt;第一幕：白日梦的甜蜜沼泽——当
      
    
    </summary>
    
      <category term="心路历程" scheme="http://qianyouyou.cn/categories/%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B/"/>
    
      <category term="散文" scheme="http://qianyouyou.cn/categories/%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B/%E6%95%A3%E6%96%87/"/>
    
    
      <category term="散文" scheme="http://qianyouyou.cn/tags/%E6%95%A3%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>递归梦境：在熵增深渊里焊接银河渡船</title>
    <link href="http://qianyouyou.cn/2025/06/07/2025-06-07/"/>
    <id>http://qianyouyou.cn/2025/06/07/2025-06-07/</id>
    <published>2025-06-06T20:12:50.000Z</published>
    <updated>2025-06-22T14:09:35.511Z</updated>
    
    <content type="html"><![CDATA[<h2 id="递归梦境：在熵增深渊里焊接银河渡船"><a href="#递归梦境：在熵增深渊里焊接银河渡船" class="headerlink" title="递归梦境：在熵增深渊里焊接银河渡船"></a><strong>递归梦境：在熵增深渊里焊接银河渡船</strong></h2><p>空调外机的低鸣在子夜涨潮，忽被一阵急促的键盘敲击声刺破——我的手指在梦醒后敲打着虚空。</p><p>今夜梦境是台越狱的虚拟机： 高考卷面的沙沙声竟编译成工位键盘的疾雨，出租屋上铺床架的呻吟突变为经理破门的训斥。两个时空的钢索绞紧胸腔，勒紧每个正在逃逸的梦境。</p><hr><h3 id="一、叩问：梦为何总在旧代码里编译？"><a href="#一、叩问：梦为何总在旧代码里编译？" class="headerlink" title="一、叩问：梦为何总在旧代码里编译？"></a><strong>一、叩问：梦为何总在旧代码里编译？</strong></h3><p>最近梦境如顽固的递归函数，今夜意识流溢出核心栈：</p><ul><li><p><strong>场景A</strong>：高考在即，然而放学时校门口油锅里滋啦作响的油条，香味漫过十年光阴直抵今晨的舌根。突然，油条香气刺穿时空防火墙 ，物理公式在演算纸上坍缩成乱码，同桌突然将纸团抛过楚河汉界。  而校门口油锅滋啦作响的爆鸣，竟在十年后编译成唤醒胃囊的<code>SystemCall</code>。</p><p>——  <em>弗洛伊德注：味觉记忆是埋入海马体的Hook函数，当现实感官带宽不足时，触发童年补偿性回滚</em>  </p></li><li><p><strong>场景B</strong>：即将奔赴职场，城中村出租屋里，中介甩来的电子合同在手机屏闪烁，<code>rm -rf youth</code>（删除青春）的代码幻影在条款间游走。 出租屋的日光灯管焊入视觉暂留区，睡在上铺的我，鼾声沿双层床架垂直坠落，在耳蜗里堆叠成<code>ERROR</code>日志瀑布。 眼皮烙着青白灼痕，如<code>BIOS</code>启动失败的报错光标。</p><p>—— <em>荣格注：过度劳累时，集体潜意识将压力具象为「光污染废墟」，提醒主体平衡阴阳能量场</em> </p></li><li><p><strong>场景C</strong>：通宵加班，室友的抱怨声悬浮在宿舍暖光里：“本月宽带费暖气费均摊。” 声波未抵达听觉皮层，经理推门的震波震落了墙灰，墙灰粒子在经理的训斥声中完成量子跃迁。那被震落的尘埃， 竟在晨光衍射中重组为浮动的金粉矩阵。</p><p>—— <em>量子梦境假说：观察者效应使创伤记忆发生波函数坍缩，痛苦被意识渲染为勋章</em> </p></li></ul><p>醒时指尖残留着薄膜键盘的塑胶触感，鼻腔却灌满此刻卧室的香薰机水雾。那些被deadline追杀、被ERROR日志与线上问题逼至深渊的日夜，竟在回望时镀上了蜜色光晕。而此刻人体工学椅托着腰椎，4K屏流淌着护眼光谱，灵魂却像被抽走核心线程的进程，悬停在静默的等待队列。</p><hr><h3 id="二、辩证：怀旧是记忆的编译谬误吗？"><a href="#二、辩证：怀旧是记忆的编译谬误吗？" class="headerlink" title="二、辩证：怀旧是记忆的编译谬误吗？"></a><strong>二、辩证：怀旧是记忆的编译谬误吗？</strong></h3><h4 id="假说1：怀旧是懦弱的返祖现象"><a href="#假说1：怀旧是懦弱的返祖现象" class="headerlink" title="假说1：怀旧是懦弱的返祖现象"></a>假说1：怀旧是懦弱的返祖现象</h4><p>如同过时的API接口强行调用废弃库函数，在舒适区的沙箱里反复执行<code>nostalgia.exe</code>。当现实CPU满载运行时，意识却将线程切换至ROM只读存储器——那些高考油条的焦香、双层床架的震颤，不过是刻录在神经突触里的只读扇区。我们像被困在死循环的进程，用昨日残片构建今日的虚拟内存，实则是畏惧为未来分配新的堆栈空间。 </p><h4 id="假说2：梦境是现实的镜像溢出"><a href="#假说2：梦境是现实的镜像溢出" class="headerlink" title="假说2：梦境是现实的镜像溢出"></a>假说2：梦境是现实的镜像溢出</h4><p>当现实进入低功耗模式（安逸生活），被压抑的匮乏体验便激活海马体的Hook函数。那些被<code>kill -9</code>强制终止的奋斗进程（高考冲刺/职场求生），在睡眠态获得root权限后开始疯狂回滚。记忆熔断保护器被击穿，十年陈的油锅爆鸣与经理训斥声在脑皮层混音播放——这是精神熵增的必然：系统必须调用高负载记忆（奋斗岁月）维持能量守恒，否则安逸的温水将彻底溶解灵魂的晶体振荡器。 </p><h4 id="假说3：幻象是未来的加密信函"><a href="#假说3：幻象是未来的加密信函" class="headerlink" title="假说3：幻象是未来的加密信函"></a>假说3：幻象是未来的加密信函</h4><p>当晨光中的墙灰坍缩为金粉矩阵时，我听见量子比特在耳蜗低语：所有创伤都是被折叠的虫洞入口。高考演算纸上的乱码实则是自解压程序，正将物理公式重组为职场危机的补丁包；经理破门的震波在时空连续体上激发的涟漪，此刻正推动我的指尖敲下这行代码。正如量子纠缠无视光锥约束，那些在ERROR日志里垂直坠落的鼾声，终将在某次波函数坍缩中重组为超导量子比特。</p><hr><h3 id="三、顿悟：光在裂隙处显形"><a href="#三、顿悟：光在裂隙处显形" class="headerlink" title="三、顿悟：光在裂隙处显形"></a><strong>三、顿悟：光在裂隙处显形</strong></h3><p>我抽出大学时买的已落灰的《庄子》，指尖在“与时俱化”旁按出指纹。那时不懂何谓“安时而处顺”，只觉每个字都是砸向铁屋的陨石。</p><p>落灰的《庄子》突然释放电磁脉冲。当指纹激活”与时俱化”的古老字节，所有递归梦境瞬间终止core dump。我意识到：高考考场上抛来的橡皮擦、出租屋墙灰震荡成的金粉、甚至经理训斥声在听觉神经激发的量子纠缠——这些从来不是需要修复的bug，而是宇宙编译器预埋的<code>#pragma</code>优化指令。 油条香气穿透的何止时空防火墙？它早已将海马体改造成冯诺依曼架构的奇点：童年滋啦作响的油锅是L1缓存，职场键盘疾雨是L2预取器，而此刻卧室香薰机的氤氲水雾，正通过嗅觉总线将整个记忆体系升级为存算一体架构。原来光从未消失，它只是被压缩在人生.bin文件的间隙里，等待<code>dd</code>命令的按位读取。 </p><hr><blockquote><p><strong>终章：向熵增宣战的生灵</strong></p><p>机箱风扇的尘埃在4K护眼光谱中跳起玻色-爱因斯坦凝聚之舞。那些被Deadline追杀的日夜、被线上问题逼至悬崖的瞬间，此刻正以反物质态注入我的脊髓——它们不再是需要GC回收的堆内存，而是驱动量子隧穿的势垒。  人体工学椅托举的何止腰椎？它承载着正进行实时无损压缩的时空连续性。当十年前的油条香与今日的键盘声在哈希表中碰撞出希格斯玻色子，我终于编译出对抗热寂的终极算法：将高考答卷的演算纸折成哥德尔宇宙船，让经理训斥声的震波转换为曲率引擎的初始动能。机箱风扇卷起尘埃起舞。<br>此身此夜，且以残存指骨为焊枪，熔铸断点成银河渡船。那些曾经日夜敲打我的ERROR日志，此刻正以超流体形态托举船体，驶向记忆奇点的事件视界。 </p><p>蓦然读懂《齐物论》页脚的指纹：<br><strong>与时俱化者，非弃旧也——昨日之我凿穿的岩层，恰是今日之光抵达的甬道</strong></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;递归梦境：在熵增深渊里焊接银河渡船&quot;&gt;&lt;a href=&quot;#递归梦境：在熵增深渊里焊接银河渡船&quot; class=&quot;headerlink&quot; title=&quot;递归梦境：在熵增深渊里焊接银河渡船&quot;&gt;&lt;/a&gt;&lt;strong&gt;递归梦境：在熵增深渊里焊接银河渡船&lt;/strong&gt;&lt;
      
    
    </summary>
    
      <category term="心路历程" scheme="http://qianyouyou.cn/categories/%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B/"/>
    
      <category term="散文" scheme="http://qianyouyou.cn/categories/%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B/%E6%95%A3%E6%96%87/"/>
    
    
      <category term="散文" scheme="http://qianyouyou.cn/tags/%E6%95%A3%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>请逗留一刻吧，是那样美丽</title>
    <link href="http://qianyouyou.cn/2020/05/14/2020-05-14/"/>
    <id>http://qianyouyou.cn/2020/05/14/2020-05-14/</id>
    <published>2020-05-14T11:22:06.000Z</published>
    <updated>2020-07-26T16:03:10.213Z</updated>
    
    <content type="html"><![CDATA[<p>你只管努力，一切交给天意。很久前便听过这句话，听起来挺励志的，就像我的大四。然而随着涉世越来越深，我却渐渐明白，很多事情其实不是我们能决定的，哪怕独自再怎么努力。曾经年少轻狂，某人给我贴上了“自以为是”的标签而离开。四年时间，我逐渐磨灭了的脾气，收敛了的锋芒，处处考虑别人感受，向着某人所期待的模样改变，结果最后还是换来某人一句“自以为是”而结束。我不断为维持我们的联系而努力，尽管她从来不曾考虑过我们的感情如何经营。所以当再次约她时，最终仍然换得一句“你太自以为是了”而结束，这一次我反而释怀了，因为我明白了，自以为是的不是我。我终于明白，在感情的世界里，一个人的努力是不够的，感情是需要两个人共同经营的。而且感情的世界最主要的是平等，一旦一方失去平衡，感情很难维护。试想一下，假如对方享受惯了被追的感觉，对你爱理不理，你再怎么努力都是白费，因为你再怎么努力也唤不醒一个装睡的人。感情如此，人生亦如此。就像我努力求职，最终成功签约心仪的公司，然而却因学校方面的一个简简单单的手续卡了我三个月。我终于明白，有时候，即使你努力，也白费，你的命运常常需要交到其他人手上，所以，人脉很重要。</p><p>曾经我也想过一了百了。</p><p>在疫情爆发的那段岁月里，每一天都是浑浑噩噩，一方面因为久久得不到学校方面的任何消息，使得我的精神饱受折磨；另一方面由于长期受到鼻炎的困扰，导致每天从睁开眼开始便是噩梦。就这样，一天天消磨着时间，每天都想做出改变，但每天都重复着昨天的过程。我常常在想，为什么上帝总是选择我，明明我只想安安稳稳，却总是被命运推着起起伏伏；明明想从今天起做出改变，但依旧重复着单调的生活。</p><p>那段时间，我总是把自己封闭起来，把所有情绪包裹在肚子里，不像任何人诉说心里的苦，即使对家人也不例外，因此家里人并不太清楚具体发生的事情。因此某天因为没有获得返校的资格而心中一肚子委屈，终于在吃饭时全部宣泄到了家人的身上。小时候每次发火，母亲总是忍耐我，而其他人骂我；但随着我的成长，懂得东西越来越多，家里人都知道说不过我，所以每次在我发火时，其他人反而总是忍耐我，只有母亲开始反驳我。我知道，母亲是怕我误入歧途，随着我的经历越来越多，没人再能管我，所以每次当我做错事或者宣泄情绪时，只有母亲站了出来。这一次所有人都开始劝我母亲不要再说下去，而我母亲却一直在指我错误的地方。终于当我母亲说理解我最近的心情，我说“你理解个屁”时，我母亲又一次哭了，或许是因为激动，或许是因为听到我受到委屈。那天，我上楼后，长期以来积在心里的委屈，终于以眼泪的形式散落出来。我躲在房间里哭的歇斯底里，或许因为委屈，或许因为母亲。</p><p>很长时间我常常想着如何没有痛苦地一了百了，但每当想起之后家人的眼泪，就打消了这个念头。有时候甚至抱怨，明明疫情把我的精神璀璨的支离破碎，为什么不让我患上肺炎，这样至少我便有了死去的理由，不用担心受到别人的谴责，或许这只是我想逃避一切的借口吧。</p><p>自疫情以来，我越来越喜欢睡觉，也越来越容易做梦。因为我发现当心情不好时，睡一觉什么都过去了，心情也好了，同时梦里的世界总是那么美好。某一天梦里，因为衣服脏了，我开始抱怨，结果母亲骂了我，随后因为意外我真的死去了。然后我以上帝视角看着一切，在我死后，我获得了想要的一切，我获得了所有的闪卡（可能和我玩的游戏有关），美国总统宣布我生前对世界的贡献（可能与每天的新闻报道有关），街头小巷也放映着我喜欢但不被大众接受的音乐（可能因为华晨宇得歌王后被大众黑），尽管我得到了一切，但是我已经死了，那一刻，我在呐喊，多希望上帝赋予我生命，哪怕一切化为乌有。我终于明白，当我死后我是多么希望我活下去。有时候不得不承认，梦虽然荒诞，像《爱丽丝梦游仙境》或者《红辣椒》一样，但却是我们潜意识真实的感受，像《夏洛特烦恼》，鼓舞我们继续向前，或许这一切都是上帝的指示，就像但丁的《神曲》。于是，我醒了，带着生的希望。</p><p>用漫不经心的态度，过随遇而安的生活。</p><p>虽然打消了死亡的念头，但生活中的无奈并未消退。曾经天天蹲教育厅，终于教育厅宣布可以开学了，于是蹲学校。然而当知道自己没办法去学校，而自己可能因为意外而面临失业时，犹如晴空霹雳，渐渐地，我不再去关注任何开学的消息，对生活也渐渐失去希望。某天夜里，我睁开了眼，却无法动，眼前一副鬼脸，一根棒子压着我，就像雷神的锤子落在洛基身上，施了魔法一样，明明意识想控制身体，但就是无法动。我清楚，这是魔鬼的考验，于是用尽全身的力气动了动手指，最终拜托了魔鬼的困扰。尽管这次成功了，但生活的烦恼越来越多。</p><p>后来发现了《与神对话》这部作品，于是一段时间生活又充满了阳光，开始了等待。然而迟迟等不到开学的消息，反而等来越来越多不好的消息。我开始埋怨，明明一个章的事情，结果拖了我三个月没有消息，眼前政府贪污，但至少有钱可以办事，现在政府领导们不接受贿赂，但也不愿承担风险，有钱也没办法。看着自己可能面临失业，我开始抱怨制度，甚至渐渐开始质疑上帝。某天梦里，我躺在床上，魔鬼抱起了我，而我却欣然接受了。然后我便醒了，我知道，这一刻，我已离上帝越来越远，渐渐变成了魔鬼。</p><p>然而事情总有解决的途径，上帝通过考验使人成长，但所有的苦难都是人们所能承受的。当困扰我三个月的问题有了解决途径时，我终于明白，其实之所以被困扰，完全是我自己困扰着我自己。每个人都只能通过自己的方式来认识世界，我们没办法感受别人的心情。也许在你看来很复杂的事情其实并没有那么复杂，在你看来很重要的事情别人可能并不了解情况，所有的困扰都是我们自己给自己带来的。当我们抱怨自己的命运在别人的一念之间，自己所有的努力都没有任何作用时，不妨多从别人的角度看待问题，多沟通，一切并不难解决。</p><p>在心门终于打开那一刻，我来到了天台，夕阳照在身上，群鸟飞翔，一切充满了生机。我知道，上帝不会放弃每一个人。</p><p>请逗留一刻吧，是那样美丽。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;你只管努力，一切交给天意。很久前便听过这句话，听起来挺励志的，就像我的大四。然而随着涉世越来越深，我却渐渐明白，很多事情其实不是我们能决定的，哪怕独自再怎么努力。曾经年少轻狂，某人给我贴上了“自以为是”的标签而离开。四年时间，我逐渐磨灭了的脾气，收敛了的锋芒，处处考虑别人感
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>分布式云盘部署服务端的漫漫bug路</title>
    <link href="http://qianyouyou.cn/2020/03/13/2020-03-13/"/>
    <id>http://qianyouyou.cn/2020/03/13/2020-03-13/</id>
    <published>2020-03-13T12:04:27.000Z</published>
    <updated>2020-03-13T14:05:28.443Z</updated>
    
    <content type="html"><![CDATA[<p>云盘服务端代码经历两天bug之后终于部署到了自己的服务器上。因此总结一下这两天所出现的所有问题，日后再出现同样的问题便可解决。</p><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><ol><li><p>服务端代码部署到虚拟机并启动</p></li><li><p>发现问题，Qt客户端注册与登录无响应</p></li><li><p>检查客户端登录注册代码，发现没有问题</p></li><li><p>检查客户端收到的错误码，发现客户端并未收到服务端反馈的错误码</p></li><li><p>查询服务端Nginx服务器log日志，发现80端口请求注册登录端口未成功</p></li><li><p>检查登录注册端口，发现未启动端口，排除客户端的问题</p></li><li><p>关闭防火墙，仍无法启动端口</p></li><li><p>重新启动服务端代码，查看服务端cgi程序的log日志，发现并没有log日志</p></li><li><p>spawn-fcgi启动报错提示spawn-fcgi: child exited with: 127</p></li><li><p>尝试执行 <code>spawn-fcgi</code> 命令 ，发现没有问题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">qianyouyou:~ $ spawn-fcgi</span><br><span class="line">Usage: spawn-fcgi [options] [-- &lt;fcgiapp&gt; [fcgi app arguments]]</span><br><span class="line">spawn-fcgi v1.6.5 - spawns FastCGI processes</span><br><span class="line">Options:</span><br><span class="line">省略一万字</span><br></pre></td></tr></table></figure></li><li><p>执行cgi程序，发现问题<code>No such file or directory</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># 找一下 libfcgi.so 位置在哪里。</span><br><span class="line">qianyouyou:~ $ whereis libfcgi.so</span><br><span class="line">libfcgi: /usr/local/lib/libfcgi.so /usr/local/lib/libfcgi.a /usr/local/lib/libfcgi.la</span><br><span class="line"></span><br><span class="line"># 然后查看一下 /usr/local/lib/ 下面有什么。</span><br><span class="line">qianyouyou:~ $ ll /usr/local/lib/libfcgi.so*</span><br><span class="line">lrwxrwxrwx 1 root root   16 Jan  8 16:07 /usr/local/lib/libfcgi.so -&gt; libfcgi.so.0.0.0*</span><br><span class="line">-rwxr-xr-x 1 root root 124K Jan  8 16:07 /usr/local/lib/libfcgi.so.0.0.0*</span><br><span class="line"></span><br><span class="line"># 原来没有 libfcgi.so.0 这个文件， 那我们就创造一个吧。</span><br><span class="line">qianyouyou:~ $ sudo ln -s /usr/local/lib/libfcgi.so.0.0.0 /usr/local/lib/libfcgi.so.0</span><br><span class="line"></span><br><span class="line"># 执行cgi还是不行，于是我把 libfcgi.so.0 在 /usr/lib64/ 和 /usr/lib/ 里都链接了一份。</span><br><span class="line">qianyouyou:~ $ sudo ln -s /usr/local/lib/libfcgi.so.0.0.0 /usr/lib/libfcgi.so.0</span><br><span class="line">qianyouyou:~ $ sudo ln -s /usr/local/lib/libfcgi.so.0.0.0 /usr/lib64/libfcgi.so.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//fcgi和glog都需要建立软连接, 正常情况下只要在/usr/lib目录下建立链接就可以了，如果不行的话在/usr/lib64目录下也建立链接</span><br><span class="line"># ln -s /usr/local/lib/libfcgi.so.0  /usr/lib/libfcgi.so.0</span><br><span class="line"># ln -s /usr/local/lib/libfcgi.so.0  /usr/lib64/libfcgi.so.0</span><br><span class="line"># ln -s /usr/local/lib/libglog.so.0  /usr/lib/libglog.so.0</span><br><span class="line"># ln -s /usr/local/lib/libglog.so.0  /usr/lib64/libglog.so.0</span><br></pre></td></tr></table></figure></li><li><p>依然提示<code>No such file or directory</code>，重新make编译代码，提示找不到<code>mysql/mysql.h</code></p></li><li><p>发现问题，虚拟机装了mysql-server，没有装mysql-devel，安装mysql-devel</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Ununtu安装</span><br><span class="line">sudo apt-get install libmysql++-dev</span><br><span class="line"># CentOS安装</span><br><span class="line">sudo yum install -y mysql-devel</span><br></pre></td></tr></table></figure></li><li><p>make成功，重新启动成功，查看相应端口已启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ant | grep 10000</span><br></pre></td></tr></table></figure></li><li><p>客户端登录注册失败，返回错误码，查询服务端log日志，发现没有相应数据库表</p></li><li><p>远程链接数据库，创建相应数据表</p></li><li><p>虚拟机服务端部署成功</p></li><li><p>代码部署到服务器，make同样提示没有<code>mysql/mysql.h</code></p></li><li><p>安装mysql-devel未成功，提示冲突</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Transaction check error: file /usr/include/mysql/client_plugin.h from install of mariadb-1:5.5.41-2.el7_0.x86_64 conflicts with file from package MySQL-client-5.0.96-1.glibc23.x86_64</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li><li><p>查阅yum安装如何避免冲突，删掉冲突文件，均没有用(后发现由于文件夹为软连接)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># yum查看依赖库</span><br><span class="line">yum search mysql</span><br><span class="line"></span><br><span class="line">yum install mysql-devel --exclude a    #a为冲突包名</span><br></pre></td></tr></table></figure></li><li><p>由于已安装mysql为自定义文件夹，因此锁定问题为找不到自定义文件夹库</p></li><li><p>创建预编译链接，创建静态库动态库链接。<a href="https://blog.csdn.net/qq_22203741/article/details/77742800" target="_blank" rel="noopener">查阅</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 一次性命令</span><br><span class="line">export C_INCLUDE_PATH=/www/server/mysql/include:$C_INCLUDE_PATH</span><br><span class="line">export CPLUS_INCLUDE_PATH=/www/server/mysql/include:$CPLUS_INCLUDE_PATH</span><br><span class="line">export LD_LIBRARY_PATH=/www/server/mysql/lib:$LD_LIBRARY_PATH</span><br><span class="line">export LIBRARY_PATH=/www/server/mysql/lib:$LIBRARY_PATH</span><br><span class="line"></span><br><span class="line"># 所有用户都执行需将以上命令添加至/etc/profile</span><br><span class="line"></span><br><span class="line"># 动态库路径可添加至/etc/ld.so.conf</span><br></pre></td></tr></table></figure></li><li><p>make成功，但除了login与upload外其余端口均为启动</p></li><li><p>执行login可执行文件，提示没有<code>libmysqlcient.so.20</code></p></li><li><p>下载libmysqlclient.so.20，执行可执行文件，仍然报错</p></li><li><p>更换mysql版本为5.7</p></li><li><p>原本部署的博客无法访问。重新配置博客，博客访问成功。<a href="http://jpress.io/article/category/install" target="_blank" rel="noopener">网站1</a><a href="https://blog.shiyunhong.com/3025.html" target="_blank" rel="noopener">网站2</a></p></li><li><p>服务端重新启动，云盘服务端启动成功</p></li><li><p>客户端启动，可注册，不可登录</p></li><li><p>检查服务端代码，发现代码没问题</p></li><li><p>重新编译，提示没有任何文件改动，删除cgi所有.o文件，重新编译成功。</p></li><li><p>服务器云盘部署成功。</p></li></ol><h1 id="防火墙相关"><a href="#防火墙相关" class="headerlink" title="防火墙相关"></a>防火墙相关</h1><p>一、CentOS 7快速开放端口：</p><p>CentOS升级到7之后，发现无法使用iptables控制Linuxs的端口，baidu之后发现Centos 7使用firewalld代替了原来的iptables。下面记录如何使用firewalld开放Linux端口：</p><p>开启端口</p><p>[root@centos7 ~]# firewall-cmd –zone=public –add-port=80/tcp –permanent</p><p>查询端口号80 是否开启：</p><p>[root@centos7 ~]# firewall-cmd –query-port=80/tcp</p><p>重启防火墙：</p><p>[root@centos7 ~]# firewall-cmd –reload</p><p>查询有哪些端口是开启的:</p><p>[root@centos7 ~]# firewall-cmd –list-port</p><p>命令含义：</p><p>–zone #作用域<br>–add-port=80/tcp #添加端口，格式为：端口/通讯协议<br>–permanent #永久生效，没有此参数重启后失效</p><p>关闭firewall：</p><p>systemctl stop firewalld.service #停止firewall</p><p>systemctl disable firewalld.service #禁止firewall开机启动</p><p>二、CentOS6防火墙开放端口：</p><p>在我们使用CentOS系统的时候，CentOS防火墙有时是需要改变设置的。CentOS防火墙默认是打开的，设置CentOS防火墙开放端口方法如下：</p><p>打开iptables的配置文件：vi /etc/sysconfig/iptables</p><p>修改CentOS防火墙时注意：一定要给自己留好后路,留VNC一个管理端口和SSh的管理端口</p><p>下面是一个iptables的示例：</p><p># Firewall configuration written by system-config-securitylevel<br># Manual customization of this file is not recommended.<br>*filter<br>:INPUT ACCEPT [0:0]<br>:FORWARD ACCEPT [0:0]<br>:OUTPUT ACCEPT [0:0]<br>:RH-Firewall-1-INPUT - [0:0]<br>-A INPUT -j RH-Firewall-1-INPUT<br>-A FORWARD -j RH-Firewall-1-INPUT<br>-A RH-Firewall-1-INPUT -i lo -j ACCEPT<br>-A RH-Firewall-1-INPUT -p icmp –icmp-type any -j ACCEPT<br>-A RH-Firewall-1-INPUT -p 50 -j ACCEPT<br>-A RH-Firewall-1-INPUT -p 51 -j ACCEPT<br>-A RH-Firewall-1-INPUT -m state –state ESTABLISHED,RELATED -j ACCEPT<br>-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 53 -j ACCEPT<br>-A RH-Firewall-1-INPUT -m state –state NEW -m udp -p udp –dport 53 -j ACCEPT<br>-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 22 -j ACCEPT<br>-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 25 -j ACCEPT<br>-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 80 -j ACCEPT<br>-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 443 -j ACCEPT<br>-A RH-Firewall-1-INPUT -j REJECT –reject-with icmp-host-prohibited<br>COMMIT</p><p>修改CentOS防火墙需要注意的是，你必须根据自己服务器的情况来修改这个文件。</p><p>举例来说，如果你不希望开放80端口提供web服务，那么应该相应的删除这一行：<br>-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 80 -j ACCEPT</p><p>全部修改完之后重启iptables:service iptables restart</p><p>你可以验证一下是否规则都已经生效：iptables -L</p><p>这样，我们就完成了CentOS防火墙的设置修改。</p><h1 id="库相关"><a href="#库相关" class="headerlink" title="库相关"></a>库相关</h1><p><strong>方法一：在编译自己的项目时添加-L和-I编译选项</strong></p><p> 1）添加头文件路径： -I     #指明头文件的路径  </p><p>2）添加库文件路径： -L    #指定目录。link的时候，去找的目录。gcc会先从-L指定的目录去找，然后才查找默认路径。（告诉gcc,-l库名最可能在这个目录下）。 -l     #指定文件（库名），linking options  </p><p>注：-l紧接着就是库名，这里的库名不是真正的库文件名。比如说数学库，它的库名是m，他的库文件名是libm.so。再比如说matlab eigen库，它的库名是eng，它的库文件名是libeng.so。很容易总结得：把库文件名的头lib和尾.so去掉就是库名了。在使用时，“-leng”就告诉gcc在链接阶段引用共享函数库libeng.so。</p><p><strong>方法二：将库路径添加到环境变量</strong></p><p>1）添加头文件路径：  在/etc/profile中添加（根据语言不同，任选其一）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export C_INCLUDE_PATH=C_INCLUDE_PATH:头文件路径            #c </span><br><span class="line"></span><br><span class="line">export CPLUS_INCLUDE_PATH=CPLUS_INCLUDE_PATH:头文件路径    #c++ </span><br><span class="line"></span><br><span class="line">export OBJC_INCLUDE_PATH=OBJC_INCLUDE_PATH:头文件路径      #java</span><br></pre></td></tr></table></figure><p>终端重启后需执行一次source。 </p><p>另有一种方法：在/etc/ld.so.conf文件中加入自定义的lib库的路径，然后执行<code>sudo /sbin/ldconfig</code>，这个方法对所有终端有效。  </p><p>2）添加库文件路径：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LIBRARY_PATH    #used by gcc before compilation to search for directories containing libraries that need to be linked to your program.</span><br><span class="line">LD_LIBRARY_PATH    #used by your program to search for directories containing the libraries after it has been successfully compiled and linked.</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MATLAB=/opt/MATLAB/R2012a</span><br><span class="line">export LIBRARY_PATH=$LIBRARY_PATH:$MATLAB/bin/glnxa64</span><br><span class="line">export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MATLAB/bin/glnxa64</span><br></pre></td></tr></table></figure><p>题外话，顺便提一下LIBRARY_PATH和LD_LIBRARY_PATH的区别： </p><p>我们知道Linux下有2种库：static libraries和shared libraries。如（这里）阐述的，静态库是在编译期间会被链接并拷贝到你的程序中，因此运行时不再需要该静态库。动态库在编译时并不会被拷贝到你的程序中，而是在程序运行时才被载入，因此在程序运行时还需要动态库存在，这时就会用到LD_LIBRARY_PATH指定的路径去查找这个动态库。The libraries can be static or shared. If it is static then the code is copied over into your program and you don’t need to search for the library after your program is compiled and linked. If your library is shared then it needs to be dynamically linked to your program and that’s when LD_LIBRARY_PATH comes into play.</p><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><p>库文件在连接（静态库和共享 库）和运行（仅限共享库的程序，静态库会和可执行编译到一起）时被使用，其搜索路径是在系统中进行设置的。一般 Linux 系统把 /lib 和 /usr/lib 两个目录作为默认的库搜索路径，所以使用这两个目录中的库时不需要进行设置搜索路径即可直接使用。对于处于默认库搜索路径之外的库，需要将库的位置添加到 库的搜索路径之中。</p><p>设置库文件的搜索路径总的来说有以下几种：</p><ul><li>LIBRARY_PATH、LD_LIBRARY_PATH等 环境变量：指定连接、运行时库文件路径；</li><li>/etc/ld.so.conf 文件：添加链接时库文件的搜索路径，运行时还需要使用ldconfig命令将路径刷新到ld.so.cache中；</li><li>g++/gcc参数-L、-l、-I：指定链接时库文件的路径、名字和头文件，运行时还需要使用环境变量或者在文件/etc/ld.so.conf中指定（或者放到默认/lib路径），然后ldconfig；</li></ul><p>在/etc/profile中添加如下环境变量。</p><p> 编译时用到的环境变量： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#gcc找到头文件的路径</span><br><span class="line">C_INCLUDE_PATH=/usr/include/libxml2:/MyLib</span><br><span class="line">export C_INCLUDE_PATH</span><br><span class="line"> </span><br><span class="line">#g++找到头文件的路径</span><br><span class="line">CPLUS_INCLUDE_PATH=$CPLUS_INCLUDE_PATH:/usr/include/libxml2:/MyLib</span><br><span class="line">export CPLUS_INCLUDE_PATH</span><br><span class="line"> </span><br><span class="line">#gcc和g++在编译的链接(link)阶段查找库文件的目录列表</span><br><span class="line">LIBRARY_PATH=$LIBRARY_PATH:/MyLib</span><br><span class="line">export LIBRARY_PATH</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">对于头文件的搜索路径:export  C_INCLUDE_PATH=&lt;your include path&gt;;</span><br><span class="line">对于库文件的搜索路径:export  LIBRARY_PATH=&lt;your lib path&gt;;</span><br></pre></td></tr></table></figure><p>运行时环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#程序运行时查找ku文件的路径</span><br><span class="line">LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/MyLib</span><br><span class="line">export LD_LIBRARY_PATH</span><br></pre></td></tr></table></figure><h1 id="mysql相关"><a href="#mysql相关" class="headerlink" title="mysql相关"></a>mysql相关</h1><h2 id="设置远程连接"><a href="#设置远程连接" class="headerlink" title="设置远程连接"></a>设置远程连接</h2><h3 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h3><ol><li><p>编辑mysql配置文件，把其中<code>bind-address = 127.0.0.1</code>注释了。<code>vi /etc/mysql/mysql.conf.d/mysqld.cnf</code> </p></li><li><p>使用root进入mysql命令行，执行如下2个命令，示例中mysql的root账号和密码：root</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line"></span><br><span class="line">grant all privileges on 库名.表名 to &apos;用户名&apos;@&apos;IP地址&apos;</span><br><span class="line">identified by &apos;密码&apos; with grant option;</span><br><span class="line"></span><br><span class="line">#例：</span><br><span class="line">mysql&gt; grant all on . to root@&apos;%&apos; identified by &apos;root&apos; with grant option;</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><ol start="3"><li>重启mysql<code>/etc/init.d/mysql restart</code></li></ol><h3 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h3><ol><li>编辑mysql配置文件，把其中bind-address = 127.0.0.1注释了。<code>vi /etc/mysql/mysql.conf.d/mysqld.cnf</code> </li><li>使用root进入mysql命令行，执行如下2个命令，示例中mysql的root账号密码：root</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">   mysql –u root -p        </span><br><span class="line"></span><br><span class="line">   mysql&gt; use mysql; </span><br><span class="line"></span><br><span class="line">   mysql&gt; update user set host = &apos;%&apos; where user = &apos;root&apos;;</span><br><span class="line"></span><br><span class="line">   mysql&gt; flush privileges;</span><br><span class="line">   </span><br><span class="line">#第一句是以权限用户root登录</span><br><span class="line">#第二句：选择mysql库</span><br><span class="line">#第三句：修改host值（以通配符%的内容增加主机/IP地址），当然也可以直接增加IP地址</span><br><span class="line">#第四句：刷新MySQL的系统权限相关表</span><br></pre></td></tr></table></figure><ol start="3"><li>重启mysql<code>/etc/init.d/mysql restart</code></li></ol><h2 id="修改MySQL默认编码"><a href="#修改MySQL默认编码" class="headerlink" title="修改MySQL默认编码"></a>修改MySQL默认编码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">......  </span><br><span class="line">[mysqld]  </span><br><span class="line">......   </span><br><span class="line">character-set-server=utf8  </span><br><span class="line">......</span><br></pre></td></tr></table></figure><h2 id="设置表名不区分大小写"><a href="#设置表名不区分大小写" class="headerlink" title="设置表名不区分大小写"></a>设置表名不区分大小写</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">......  </span><br><span class="line">[mysqld]  </span><br><span class="line">......   </span><br><span class="line">character-set-server=utf8</span><br><span class="line">lower_case_table_names=1</span><br><span class="line">......</span><br></pre></td></tr></table></figure><h1 id="Jpress相关"><a href="#Jpress相关" class="headerlink" title="Jpress相关"></a>Jpress相关</h1><h2 id="通过宝塔进行安装"><a href="#通过宝塔进行安装" class="headerlink" title="通过宝塔进行安装"></a>通过宝塔进行安装</h2><p>宝塔是一个优秀的可视化服务器管理工具，提供了web操作面板，方便我们通过宝塔的web面板对服务器进行管理，例如</p><p>1、数据库安装、账号密码管理和数据管理 2、FTP账号的管理 3、各种服务器软件的安装，php、tomcat、nginx等 4、文件管理</p><p>宝塔的官网网站： <a href="http://www.bt.cn/" target="_blank" rel="noopener">http://www.bt.cn</a></p><p>通过宝塔进行安装 JPress，大概分为以下几个步骤：</p><p>1、购买服务器并安装宝塔 2、通过宝塔的后台面板安装nginx、Mysql和tomcat。 3、创建网站，并启用tomcat功能 4、上传JPress的war包，并解压缩 5、访问网站，走jpress自动安装过程</p><h3 id="1、购买服务器并安装宝塔"><a href="#1、购买服务器并安装宝塔" class="headerlink" title="1、购买服务器并安装宝塔"></a>1、购买服务器并安装宝塔</h3><p>购买服务器建议购买阿里云的 centos 7.4 以上 ，里面不要安装其他任何功能（笔者在centos 7.2 下安装宝塔，nginx是无法使用的，centos 7.4 没问题）</p><p>安装宝塔非常简单，用 root 账号进入Linux服务，然后执行如下命令即可自动安装宝塔：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://</span><br><span class="line">download.bt.cn/install/install_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure><p>需要注意的是：安装的过程中控制台会打印安装的过程，在安装完成后，控制台会输出宝塔的登陆地址、账号和密码。</p><p>重要事情说三遍：</p><blockquote><p>登陆地址、账号和密码，这部分务必要记住。 登陆地址、账号和密码，这部分务必要记住。 登陆地址、账号和密码，这部分务必要记住。</p></blockquote><h3 id="2、通过宝塔的后台，安装nginx、mysql和tomcat"><a href="#2、通过宝塔的后台，安装nginx、mysql和tomcat" class="headerlink" title="2、通过宝塔的后台，安装nginx、mysql和tomcat"></a>2、通过宝塔的后台，安装nginx、mysql和tomcat</h3><p>可以在宝塔的后台，通过 <code>软件管理 &gt; 运行环境</code> 可以找到 nginx、mysql 和 tomcat。</p><p>点击安装即可。</p><p>需要注意的是各个软件的版本号：</p><ul><li>nginx ： 1.14</li><li>tomcat ： 8.5</li><li>mysql ： 5.6</li></ul><h3 id="3、创建网站"><a href="#3、创建网站" class="headerlink" title="3、创建网站"></a>3、创建网站</h3><p>在宝塔后台，通 <code>网站 &gt; 添加网站</code> 创建一个新的网站。</p><p>创建网站的时候需要注意的是，创建mysql数据库的时候，版本要选择 <code>utf8mb4</code> 编码。</p><p>在宝塔后台的 <code>网站</code> 里，点击网站域名，在 <code>tomcat</code> 菜单里，启用 tomcat 功能。 <img src="https://gitee.com/fuhai/jpress/raw/master/doc/images/install_02.jpg" alt="img"></p><h3 id="4、上传war，并解压缩"><a href="#4、上传war，并解压缩" class="headerlink" title="4、上传war，并解压缩"></a>4、上传war，并解压缩</h3><p>在宝塔后台的 <code>网站</code> 里，点击根目录对应的目录链接，然后上传 jpress.war 到此目录。</p><p>因为宝塔无法对 .war 这种文件格式解压缩，所以需要重命名为 jpress.zip ，当然也可以在本地先把 jpress.war 先重命名为 jpress.zip 然后再上传也可以。</p><p>操作完成后，点击 jpress.zip 的解压缩即可。</p><h3 id="5、访问网站走jpress自动安装过程"><a href="#5、访问网站走jpress自动安装过程" class="headerlink" title="5、访问网站走jpress自动安装过程"></a>5、访问网站走jpress自动安装过程</h3><p>访问你的域名，JPress自动引导进行安装，在JPress安装向导的过程中，只需要填写宝塔创建完毕的数据库账号和密码即可。</p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><blockquote><p>问题：宝塔安装初次安装JPress无法正常启动？</p><p>答：</p><p>1、请查看下 /WEB-INF/classes 目录下是否有 <code>jboot.porperties</code> 和 <code>install.lock</code> 这两个文件，如果有的话请删除。</p><p>2、尝试重启 nginx 和 tomcat。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;云盘服务端代码经历两天bug之后终于部署到了自己的服务器上。因此总结一下这两天所出现的所有问题，日后再出现同样的问题便可解决。&lt;/p&gt;
&lt;h1 id=&quot;过程&quot;&gt;&lt;a href=&quot;#过程&quot; class=&quot;headerlink&quot; title=&quot;过程&quot;&gt;&lt;/a&gt;过程&lt;/h1&gt;&lt;o
      
    
    </summary>
    
      <category term="程序人生" scheme="http://qianyouyou.cn/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/"/>
    
      <category term="Linux" scheme="http://qianyouyou.cn/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/Linux/"/>
    
    
      <category term="Linux" scheme="http://qianyouyou.cn/tags/Linux/"/>
    
      <category term="大数据" scheme="http://qianyouyou.cn/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="分布式" scheme="http://qianyouyou.cn/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Qt5中QObject::connect()传参为lambda注意问题</title>
    <link href="http://qianyouyou.cn/2020/03/11/2020-03-11/"/>
    <id>http://qianyouyou.cn/2020/03/11/2020-03-11/</id>
    <published>2020-03-11T13:25:42.000Z</published>
    <updated>2020-03-11T13:44:56.169Z</updated>
    
    <content type="html"><![CDATA[<p> 在 Qt 5 中，<code>QObject::connect()</code>有五个重载： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">QMetaObject::Connection connect(const QObject *, const char *,</span><br><span class="line">                                const QObject *, const char *,</span><br><span class="line">                                Qt::ConnectionType);</span><br><span class="line"> </span><br><span class="line">QMetaObject::Connection connect(const QObject *, const QMetaMethod &amp;,</span><br><span class="line">                                const QObject *, const QMetaMethod &amp;,</span><br><span class="line">                                Qt::ConnectionType);</span><br><span class="line"> </span><br><span class="line">QMetaObject::Connection connect(const QObject *, const char *,</span><br><span class="line">                                const char *,</span><br><span class="line">                                Qt::ConnectionType) const;</span><br><span class="line"> </span><br><span class="line">QMetaObject::Connection connect(const QObject *, PointerToMemberFunction,</span><br><span class="line">                                const QObject *, PointerToMemberFunction,</span><br><span class="line">                                Qt::ConnectionType)</span><br><span class="line"> </span><br><span class="line">QMetaObject::Connection connect(const QObject *, PointerToMemberFunction,</span><br><span class="line">                                Functor);</span><br></pre></td></tr></table></figure><p>由于做界面窗口最大化按钮时，第一次点击最大化窗口，第二次还原为原大小窗口，因此需要自己写一个函数。而为了避免代码冗余，于是在connect传参时使用了lambda表达式，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">connect(ui-&gt;btn_group, &amp;ButtonGroup::maxWindow, [=]()</span><br><span class="line">&#123;</span><br><span class="line">    static bool flag = false;</span><br><span class="line">    if(!flag)</span><br><span class="line">    &#123;</span><br><span class="line">        this-&gt;showMaximized();</span><br><span class="line">        flag = true;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        this-&gt;showNormal();</span><br><span class="line">        flag = false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>于是编译错误，提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">no matching function for call to (类名):：connect()……</span><br></pre></td></tr></table></figure><p>看到这个错误，首先想到的是参数问题，由于connect()参数为四个，虽然lambda表达式默认可以省略this参数，但还是添加上试试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">connect(ui-&gt;btn_group, &amp;ButtonGroup::maxWindow, this, [=]()&#123;&#125;);</span><br></pre></td></tr></table></figure><p>结果还是编译错误。后来上网查阅相关错误，结果大多数人的错误基本都是传参问题，但基本没有用lambda表达式的。于是删掉lambda表达式改用函数调用，结果编译通过。因此错误锁定在lambda表达式上。</p><p>后来发现，lambda表达式是C++11范畴，于是在pro文件当中添加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CONFIG += c++11</span><br></pre></td></tr></table></figure><p>编译通过。</p><p>因此Qt使用lambda表达式时，首先使用的编译器要支持要用的C++11 特性，其次，在.pro中加上 <code>CONFIG += c++11</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; 在 Qt 5 中，&lt;code&gt;QObject::connect()&lt;/code&gt;有五个重载： &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line
      
    
    </summary>
    
      <category term="程序人生" scheme="http://qianyouyou.cn/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/"/>
    
      <category term="C/C++" scheme="http://qianyouyou.cn/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/C-C/"/>
    
    
      <category term="C/C++" scheme="http://qianyouyou.cn/tags/C-C/"/>
    
      <category term="Qt" scheme="http://qianyouyou.cn/tags/Qt/"/>
    
      <category term="UI" scheme="http://qianyouyou.cn/tags/UI/"/>
    
      <category term="lambda表达式" scheme="http://qianyouyou.cn/tags/lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Nginx+fastDFS搭建图床服务端</title>
    <link href="http://qianyouyou.cn/2020/03/09/2020-03-09/"/>
    <id>http://qianyouyou.cn/2020/03/09/2020-03-09/</id>
    <published>2020-03-09T03:56:46.000Z</published>
    <updated>2020-03-10T05:14:03.641Z</updated>
    
    <content type="html"><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>服务器：Linux（CentOS 7.x，Ubuntu）</p><h2 id="Nginx安装"><a href="#Nginx安装" class="headerlink" title="Nginx安装"></a>Nginx安装</h2><h3 id="宝塔安装"><a href="#宝塔安装" class="headerlink" title="宝塔安装"></a>宝塔安装</h3><p>通过宝塔面板编译安装 Nginx 1.15</p><h3 id="Ubuntu源码安装"><a href="#Ubuntu源码安装" class="headerlink" title="Ubuntu源码安装"></a>Ubuntu源码安装</h3><h4 id="APT安装"><a href="#APT安装" class="headerlink" title="APT安装"></a>APT安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nginx</span><br></pre></td></tr></table></figure><h4 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h4><p>安装包：nginx-1.10.1.tar.gz</p><h5 id="安装相关软件"><a href="#安装相关软件" class="headerlink" title="安装相关软件"></a>安装相关软件</h5><p>安装gcc g++的依赖库（如果没有gcc）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install build-essential</span><br><span class="line">sudo apt-get install libtool</span><br><span class="line">centos的话：yum install gcc-c++</span><br></pre></td></tr></table></figure><p>安装pcre依赖库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install libpcre3 libpcre3-dev</span><br><span class="line">centos的话：yum install -y pcre pcre-devel</span><br></pre></td></tr></table></figure><p>安装zlib依赖库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install zlib1g-dev</span><br><span class="line">centos的话：yum install -y zlib zlib-devel</span><br></pre></td></tr></table></figure><p>安装SSL依赖库（16.04默认已经安装了）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install openssl</span><br><span class="line">centos的话：yum install -y openssl openssl-devel</span><br></pre></td></tr></table></figure><h5 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h5><p>关于configure、make、make install</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">源码的安装一般由有这三个步骤：配置(configure)、编译(make)、安装(make install)</span><br><span class="line"></span><br><span class="line">其中–prefix选项就是配置安装的路径，如果不配置该选项，安装后可执行文件默认放在/usr /local/bin，库文件默认放在/usr/local/lib，配置文件默认放在/usr/local/etc，其它的资源文件放在/usr /local/share，比较分散。</span><br><span class="line">为了便于集中管理某个软件的各种文件，可以配置–prefix，如：./configure –prefix=/usr/local 。可以把所有资源文件放在/usr/local的路径中，就不会分散了。</span><br><span class="line">使用--prefix选项的另一个好处是方便卸载软件或移植软件；当某个安装的软件不再需要时，只须简单的删除该安装目录，就可以把软件卸载得干干净净；而移植软件只需拷贝整个目录到另外一个机器即可（相同的操作系统下）。</span><br></pre></td></tr></table></figure><p>configure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">首先检查机器的一些配置和环境，系统的相关依赖。如果缺少相关依赖，脚本会停止执行，软件安装失败</span><br><span class="line">根据之前检查环境和依赖的结果，生产Makefile文件（main job）</span><br></pre></td></tr></table></figure><p>make</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make是Unix系统下的一个包。执行make命令需Makefile文件。make会根据Makefile文件中指令来安装软件</span><br><span class="line">Makefile文件中有许多标签，来表示不同的section。一般的，make会编译源代码并生成可执行文件，其实Makefile主要就是描述文件编译的相互依赖关系</span><br></pre></td></tr></table></figure><p>make install</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">当执行make命令不加任何参数，程序就会按照Makefile的指令在相应的section间跳转并且执行相应的命令</span><br><span class="line">加上install参数即执行make install时，程序只会执行install section处的命令。install section的指令会将make阶段生产的可执行文件拷贝到相应的地方，例如/usr/local/bin</span><br><span class="line">make clean 会删除上次make生产的obj文件以及可执行文件</span><br></pre></td></tr></table></figure><p>配置软链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /usr/local/nginx/sbin/nginx /usr/bin/nginx</span><br></pre></td></tr></table></figure><p>现在就可以不用路径直接输入nginx启动。</p><p>配置开机启动服务</p><p>在/etc/init.d/下创建nginx文件，sudo vim /etc/init.d/nginx，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"></span><br><span class="line">### BEGIN INIT INFO</span><br><span class="line"># Provides:      nginx</span><br><span class="line"># Required-Start:    $local_fs $remote_fs $network $syslog $named</span><br><span class="line"># Required-Stop:     $local_fs $remote_fs $network $syslog $named</span><br><span class="line"># Default-Start:     2 3 4 5</span><br><span class="line"># Default-Stop:      0 1 6</span><br><span class="line"># Short-Description: starts the nginx web server</span><br><span class="line"># Description:       starts nginx using start-stop-daemon</span><br><span class="line">### END INIT INFO</span><br><span class="line"></span><br><span class="line">PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class="line">DAEMON=/usr/local/nginx/sbin/nginx</span><br><span class="line">NAME=nginx</span><br><span class="line">DESC=nginx</span><br><span class="line"></span><br><span class="line"># Include nginx defaults if available</span><br><span class="line">if [ -r /etc/default/nginx ]; then</span><br><span class="line">    . /etc/default/nginx</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">STOP_SCHEDULE=&quot;$&#123;STOP_SCHEDULE:-QUIT/5/TERM/5/KILL/5&#125;&quot;</span><br><span class="line"></span><br><span class="line">test -x $DAEMON || exit 0</span><br><span class="line"></span><br><span class="line">. /lib/init/vars.sh</span><br><span class="line">. /lib/lsb/init-functions</span><br><span class="line"></span><br><span class="line"># Try to extract nginx pidfile</span><br><span class="line">PID=$(cat /usr/local/nginx/conf/nginx.conf | grep -Ev &apos;^\s*#&apos; | awk &apos;BEGIN &#123; RS=&quot;[;&#123;&#125;]&quot; &#125; &#123; if ($1 == &quot;pid&quot;) print $2 &#125;&apos; | head -n1)</span><br><span class="line">if [ -z &quot;$PID&quot; ]; then</span><br><span class="line">    PID=/run/nginx.pid</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if [ -n &quot;$ULIMIT&quot; ]; then</span><br><span class="line">    # Set ulimit if it is set in /etc/default/nginx</span><br><span class="line">    ulimit $ULIMIT</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">start_nginx() &#123;</span><br><span class="line">    # Start the daemon/service</span><br><span class="line">    #</span><br><span class="line">    # Returns:</span><br><span class="line">    #   0 if daemon has been started</span><br><span class="line">    #   1 if daemon was already running</span><br><span class="line">    #   2 if daemon could not be started</span><br><span class="line">    start-stop-daemon --start --quiet --pidfile $PID --exec $DAEMON --test &gt; /dev/null \</span><br><span class="line">        || return 1</span><br><span class="line">    start-stop-daemon --start --quiet --pidfile $PID --exec $DAEMON -- \</span><br><span class="line">        $DAEMON_OPTS 2&gt;/dev/null \</span><br><span class="line">        || return 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">test_config() &#123;</span><br><span class="line">    # Test the nginx configuration</span><br><span class="line">    $DAEMON -t $DAEMON_OPTS &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stop_nginx() &#123;</span><br><span class="line">    # Stops the daemon/service</span><br><span class="line">    #</span><br><span class="line">    # Return</span><br><span class="line">    #   0 if daemon has been stopped</span><br><span class="line">    #   1 if daemon was already stopped</span><br><span class="line">    #   2 if daemon could not be stopped</span><br><span class="line">    #   other if a failure occurred</span><br><span class="line">    start-stop-daemon --stop --quiet --retry=$STOP_SCHEDULE --pidfile $PID --name $NAME</span><br><span class="line">    RETVAL=&quot;$?&quot;</span><br><span class="line">    sleep 1</span><br><span class="line">    return &quot;$RETVAL&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">reload_nginx() &#123;</span><br><span class="line">    # Function that sends a SIGHUP to the daemon/service</span><br><span class="line">    start-stop-daemon --stop --signal HUP --quiet --pidfile $PID --name $NAME</span><br><span class="line">    return 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rotate_logs() &#123;</span><br><span class="line">    # Rotate log files</span><br><span class="line">    start-stop-daemon --stop --signal USR1 --quiet --pidfile $PID --name $NAME</span><br><span class="line">    return 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upgrade_nginx() &#123;</span><br><span class="line">    # Online upgrade nginx executable</span><br><span class="line">    # http://nginx.org/en/docs/control.html</span><br><span class="line">    #</span><br><span class="line">    # Return</span><br><span class="line">    #   0 if nginx has been successfully upgraded</span><br><span class="line">    #   1 if nginx is not running</span><br><span class="line">    #   2 if the pid files were not created on time</span><br><span class="line">    #   3 if the old master could not be killed</span><br><span class="line">    if start-stop-daemon --stop --signal USR2 --quiet --pidfile $PID --name $NAME; then</span><br><span class="line">        # Wait for both old and new master to write their pid file</span><br><span class="line">        while [ ! -s &quot;$&#123;PID&#125;.oldbin&quot; ] || [ ! -s &quot;$&#123;PID&#125;&quot; ]; do</span><br><span class="line">            cnt=`expr $cnt + 1`</span><br><span class="line">            if [ $cnt -gt 10 ]; then</span><br><span class="line">                return 2</span><br><span class="line">            fi</span><br><span class="line">            sleep 1</span><br><span class="line">        done</span><br><span class="line">        # Everything is ready, gracefully stop the old master</span><br><span class="line">        if start-stop-daemon --stop --signal QUIT --quiet --pidfile &quot;$&#123;PID&#125;.oldbin&quot; --name $NAME; then</span><br><span class="line">            return 0</span><br><span class="line">        else</span><br><span class="line">            return 3</span><br><span class="line">        fi</span><br><span class="line">    else</span><br><span class="line">        return 1</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">    start)</span><br><span class="line">        log_daemon_msg &quot;Starting $DESC&quot; &quot;$NAME&quot;</span><br><span class="line">        start_nginx</span><br><span class="line">        case &quot;$?&quot; in</span><br><span class="line">            0|1) log_end_msg 0 ;;</span><br><span class="line">            2)   log_end_msg 1 ;;</span><br><span class="line">        esac</span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        log_daemon_msg &quot;Stopping $DESC&quot; &quot;$NAME&quot;</span><br><span class="line">        stop_nginx</span><br><span class="line">        case &quot;$?&quot; in</span><br><span class="line">            0|1) log_end_msg 0 ;;</span><br><span class="line">            2)   log_end_msg 1 ;;</span><br><span class="line">        esac</span><br><span class="line">        ;;</span><br><span class="line">    restart)</span><br><span class="line">        log_daemon_msg &quot;Restarting $DESC&quot; &quot;$NAME&quot;</span><br><span class="line"></span><br><span class="line">        # Check configuration before stopping nginx</span><br><span class="line">        if ! test_config; then</span><br><span class="line">            log_end_msg 1 # Configuration error</span><br><span class="line">            exit $?</span><br><span class="line">        fi</span><br><span class="line"></span><br><span class="line">        stop_nginx</span><br><span class="line">        case &quot;$?&quot; in</span><br><span class="line">            0|1)</span><br><span class="line">                start_nginx</span><br><span class="line">                case &quot;$?&quot; in</span><br><span class="line">                    0) log_end_msg 0 ;;</span><br><span class="line">                    1) log_end_msg 1 ;; # Old process is still running</span><br><span class="line">                    *) log_end_msg 1 ;; # Failed to start</span><br><span class="line">                esac</span><br><span class="line">                ;;</span><br><span class="line">            *)</span><br><span class="line">                # Failed to stop</span><br><span class="line">                log_end_msg 1</span><br><span class="line">                ;;</span><br><span class="line">        esac</span><br><span class="line">        ;;</span><br><span class="line">    reload|force-reload)</span><br><span class="line">        log_daemon_msg &quot;Reloading $DESC configuration&quot; &quot;$NAME&quot;</span><br><span class="line"></span><br><span class="line">        # Check configuration before stopping nginx</span><br><span class="line">        #</span><br><span class="line">        # This is not entirely correct since the on-disk nginx binary</span><br><span class="line">        # may differ from the in-memory one, but that&apos;s not common.</span><br><span class="line">        # We prefer to check the configuration and return an error</span><br><span class="line">        # to the administrator.</span><br><span class="line">        if ! test_config; then</span><br><span class="line">            log_end_msg 1 # Configuration error</span><br><span class="line">            exit $?</span><br><span class="line">        fi</span><br><span class="line"></span><br><span class="line">        reload_nginx</span><br><span class="line">        log_end_msg $?</span><br><span class="line">        ;;</span><br><span class="line">    configtest|testconfig)</span><br><span class="line">        log_daemon_msg &quot;Testing $DESC configuration&quot;</span><br><span class="line">        test_config</span><br><span class="line">        log_end_msg $?</span><br><span class="line">        ;;</span><br><span class="line">    status)</span><br><span class="line">        status_of_proc -p $PID &quot;$DAEMON&quot; &quot;$NAME&quot; &amp;&amp; exit 0 || exit $?</span><br><span class="line">        ;;</span><br><span class="line">    upgrade)</span><br><span class="line">        log_daemon_msg &quot;Upgrading binary&quot; &quot;$NAME&quot;</span><br><span class="line">        upgrade_nginx</span><br><span class="line">        log_end_msg $?</span><br><span class="line">        ;;</span><br><span class="line">    rotate)</span><br><span class="line">        log_daemon_msg &quot;Re-opening $DESC log files&quot; &quot;$NAME&quot;</span><br><span class="line">        rotate_logs</span><br><span class="line">        log_end_msg $?</span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        echo &quot;Usage: $NAME &#123;start|stop|restart|reload|force-reload|status|configtest|rotate|upgrade&#125;&quot; &gt;&amp;2</span><br><span class="line">        exit 3</span><br><span class="line">        ;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p>-</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#设置服务脚本有执行权限</span><br><span class="line">sudo chmod +x /etc/init.d/nginx</span><br><span class="line">#注册服务</span><br><span class="line">cd /etc/init.d/</span><br><span class="line">sudo update-rc.d nginx defaults</span><br></pre></td></tr></table></figure><p>现在基本上就可以开机启动了，常用的命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service nginx &#123;start|stop|restart|reload|force-reload|status|configtest|rotate|upgrade&#125;</span><br></pre></td></tr></table></figure><h2 id="fastDFS软件准备"><a href="#fastDFS软件准备" class="headerlink" title="fastDFS软件准备"></a>fastDFS软件准备</h2><p>fastdfs-5.10.tar.gz</p><p>libfastcommon-1.36.zip</p><p>fastdfs-nginx-module_v1.16.tar.gz</p><h2 id="阿里云服务器准备"><a href="#阿里云服务器准备" class="headerlink" title="阿里云服务器准备"></a>阿里云服务器准备</h2><p>参考</p><p><a href="https://www.cnblogs.com/guigujun/p/7804670.html" target="_blank" rel="noopener">https://www.cnblogs.com/guigujun/p/7804670.html</a></p><p>本人使用的是阿里云服务器,配置上和上面教程略有不同</p><p>阿里防火墙 开放端口 TCP 22122 23000 等,记得开放要用的端口,否则后面操作失败</p><p>由于有了阿里云防火墙,所以服务器上的防火墙基本都不想开了,因为如果开放一个端口,要改阿里防火墙和服务器防火墙 2个地方,太繁琐了,所以可以使用以下命令禁用服务器自身的防火墙</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#关闭防火墙</span><br><span class="line">systemctl stop firewalld.service</span><br><span class="line">#禁止防火墙开机自启</span><br><span class="line">systemctl disable firewalld.service</span><br></pre></td></tr></table></figure><h1 id="fastDFS安装"><a href="#fastDFS安装" class="headerlink" title="fastDFS安装"></a>fastDFS安装</h1><h2 id="安装libfastcommon"><a href="#安装libfastcommon" class="headerlink" title="安装libfastcommon"></a>安装libfastcommon</h2><p>使用软件上传所有FastDFS软件到服务器的 /home/package/fdfs目录上（目录自己建立）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">cd /home/package/fdfs</span><br><span class="line"></span><br><span class="line"># 解压所有的压缩包</span><br><span class="line">unzip libfastcommon-1.0.36.zip</span><br><span class="line">tar -zxvf fastdfs-5.10.tar.gz</span><br><span class="line">tar -zxvf fastdfs-nginx-module_v1.16.tar.gz</span><br><span class="line"></span><br><span class="line"># 安装fastdfs的环境</span><br><span class="line">cd libfastcommon-1.0.36</span><br><span class="line">./make.sh</span><br><span class="line">./make.sh install</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#建立软链接(可省略)</span><br><span class="line">ln -s /usr/lib64/libfastcommon.so /usr/local/lib/libfastcommon.so</span><br><span class="line">ln -s /usr/lib64/libfastcommon.so /usr/lib/libfastcommon.so</span><br><span class="line">ln -s /usr/lib64/libfdfsclient.so /usr/local/lib/libfdfsclient.so</span><br><span class="line">ln -s /usr/lib64/libfdfsclient.so /usr/lib/libfdfsclient.so</span><br></pre></td></tr></table></figure><h2 id="安装fastDFS"><a href="#安装fastDFS" class="headerlink" title="安装fastDFS"></a>安装fastDFS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 安装FastDFS</span><br><span class="line">cd /home/package/fdfs/fastdfs-5.10</span><br><span class="line">./make.sh</span><br><span class="line">./make.sh install</span><br><span class="line"></span><br><span class="line">#从样本中拷贝配置文件</span><br><span class="line">cd /etc/fdfs/</span><br><span class="line">cp client.conf.sample client.conf</span><br><span class="line">cp storage.conf.sample storage.conf</span><br><span class="line">cp tracker.conf.sample tracker.conf</span><br></pre></td></tr></table></figure><h3 id="配置tracker"><a href="#配置tracker" class="headerlink" title="配置tracker"></a>配置tracker</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"># 一并把后面要的所有目录创建</span><br><span class="line">mkdir /home/fastdfs/tracker</span><br><span class="line">mkdir /home/fastdfs/storage</span><br><span class="line">mkdir /home/fastdfs/client</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">******************************************</span><br><span class="line"># 配置文件 tracker</span><br><span class="line">vim /etc/fdfs/tracker.conf</span><br><span class="line"># 关注以下配置</span><br><span class="line">disabled=false </span><br><span class="line">port=22122 #默认端口号 </span><br><span class="line">base_path=/home/fastdfs/tracker #自己刚创建的目录 </span><br><span class="line">#http.server_port=8080 #默认端口是8080</span><br><span class="line">#bind_addr 留空即可,不写则(外网内网)都可以访问</span><br><span class="line">bind_addr=</span><br><span class="line">#bind_addr=192.168.133.128内网网址</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 查看支持命令 ,常用的有 start,stop,status</span><br><span class="line">service fdfs_trackerd</span><br><span class="line"># 启动tracker,这里显示ok还不行,还得看下面的监听端口看不看得到</span><br><span class="line">service fdfs_trackerd start</span><br><span class="line">#fdfs_trackerd /etc/fdfs/tracker.conf 同样可以启动</span><br><span class="line"></span><br><span class="line"># 开机自启动</span><br><span class="line">echo &quot;service fdfs_trackerd start&quot; |tee -a /etc/rc.d/rc.local</span><br><span class="line"></span><br><span class="line">#查看tracker监听端口</span><br><span class="line"># 这里必须看到 tracker的监听端口,否则请检查上面的操作</span><br><span class="line">netstat -unltp|grep fdfs</span><br></pre></td></tr></table></figure><h3 id="配置storage"><a href="#配置storage" class="headerlink" title="配置storage"></a>配置storage</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">*****************************</span><br><span class="line"># 配置文件 storage</span><br><span class="line">vim /etc/fdfs/storage.conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 注意下列配置</span><br><span class="line">disabled=false </span><br><span class="line">group_name=group1 #组名，根据实际情况修改 </span><br><span class="line">port=23000 #设置storage的端口号，默认是23000，同一个组的storage端口号必须一致 </span><br><span class="line">base_path=/home/fastdfs/storage #设置storage数据文件和日志目录 </span><br><span class="line">store_path_count=1 #存储路径个数，需要和store_path个数匹配 </span><br><span class="line">store_path0=/home/fastdfs/storage_data #实际文件存储路径 </span><br><span class="line">tracker_server=公网IP:22122 #阿里云服务器的公网IP</span><br><span class="line">#bind_addr 留空即可,不写则(外网内网)都可以访问</span><br><span class="line">bind_addr=</span><br><span class="line">#bind_addr=192.168.133.128内网网址</span><br><span class="line">#http.server_port=8888 #设置 http 端口号</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 创建软引用</span><br><span class="line">ln -s /usr/bin/fdfs_storaged /usr/local/bin</span><br><span class="line"></span><br><span class="line">#启动storage ,这里ok还不行,必须看到storage的监听端口才行</span><br><span class="line">service fdfs_storaged start</span><br><span class="line">#fdfs_storaged /etc/fdfs/storage.conf</span><br><span class="line"></span><br><span class="line">#开机自启动 storage</span><br><span class="line">echo &quot;service fdfs_storaged start&quot; |tee -a /etc/rc.d/rc.local</span><br><span class="line"></span><br><span class="line"># 看一下是否有tracker和storage的2个监听端口,否则请检查上面操作</span><br><span class="line">netstat -unltp | grep fdfs</span><br></pre></td></tr></table></figure><h3 id="配置client"><a href="#配置client" class="headerlink" title="配置client"></a>配置client</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/fdfs/client.conf</span><br><span class="line"></span><br><span class="line"># 注意以下配置</span><br><span class="line">base_path=/home/fastdfs/client #tracker服务器文件路径</span><br><span class="line">tracker_server=公网IP:22122 #tracker服务器IP地址和端口号</span><br><span class="line">#http.tracker_server_port=8080 # tracker 服务器的 http端口号，必须和tracker的设置对应起来</span><br></pre></td></tr></table></figure><h3 id="检验"><a href="#检验" class="headerlink" title="检验"></a>检验</h3><h4 id="检验测试"><a href="#检验测试" class="headerlink" title="检验测试"></a>检验测试</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdfs_moniter /etc/fdfs/client.conf</span><br></pre></td></tr></table></figure><h4 id="检验上传下载"><a href="#检验上传下载" class="headerlink" title="检验上传下载"></a>检验上传下载</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 图片 /home/temp/test.jpg</span><br><span class="line"></span><br><span class="line">#上传图片</span><br><span class="line">fdfs_upload_file  /etc/fdfs/client.conf /home/temp/test.jpg</span><br><span class="line"></span><br><span class="line"># 看到group1/M00/00/00字眼即成功了,这个信息后面有用</span><br><span class="line"># group1/M00/00/00/rBEx3l5k7cmAW6eiAAGyE0VtDsM290.jpg</span><br><span class="line"></span><br><span class="line">#下载图片</span><br><span class="line">fdfs_download_file group1/M00/00/00/rBEx3l5k7cmAW6eiAAGyE0VtDsM290.jpg</span><br><span class="line"></span><br><span class="line">#查看当前路径下有没有图片 rBEx3l5k7cmAW6eiAAGyE0VtDsM290.jpg</span><br><span class="line">ls</span><br></pre></td></tr></table></figure><h1 id="fastdfs-nginx-module安装"><a href="#fastdfs-nginx-module安装" class="headerlink" title="fastdfs-nginx-module安装"></a>fastdfs-nginx-module安装</h1><h2 id="Nginx相关"><a href="#Nginx相关" class="headerlink" title="Nginx相关"></a>Nginx相关</h2><h3 id="nginx安装"><a href="#nginx安装" class="headerlink" title="nginx安装"></a>nginx安装</h3><h4 id="源码安装路径"><a href="#源码安装路径" class="headerlink" title="源码安装路径"></a>源码安装路径</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /home/package/nginx/nginx-1.10.1/</span><br></pre></td></tr></table></figure><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">./configure --add-module=/home/package/fdfs_nginx_module/fastdfs-nginx-module/src</span><br><span class="line"></span><br><span class="line">#跳转objs目录编辑Makefile添加头文件</span><br><span class="line">vim ./objs/Makefile</span><br><span class="line"># 添加以下语句</span><br><span class="line">-I usr/include/fastdfs \</span><br><span class="line">-I usr/include/fastcommon \</span><br><span class="line"></span><br><span class="line">#最后编译安装</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h3 id="宝塔nginx安装"><a href="#宝塔nginx安装" class="headerlink" title="宝塔nginx安装"></a>宝塔nginx安装</h3><h4 id="默认安装脚本路径"><a href="#默认安装脚本路径" class="headerlink" title="默认安装脚本路径"></a>默认安装脚本路径</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/www/server/panel/install/nginx.sh</span><br></pre></td></tr></table></figure><h4 id="nginx源码位置"><a href="#nginx源码位置" class="headerlink" title="nginx源码位置"></a>nginx源码位置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/www/server/nginx/src/</span><br></pre></td></tr></table></figure><h4 id="重新编译宝塔nginx"><a href="#重新编译宝塔nginx" class="headerlink" title="重新编译宝塔nginx"></a>重新编译宝塔nginx</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /www/server/nginx/src/</span><br></pre></td></tr></table></figure><h5 id="查看nginx编译参数"><a href="#查看nginx编译参数" class="headerlink" title="查看nginx编译参数"></a>查看nginx编译参数</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -V</span><br></pre></td></tr></table></figure><p>返回结果（我的）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--user=www --group=www --prefix=/www/server/nginx --add-module=/www/server/nginx/src/ngx_devel_kit --add-module=/www/server/nginx/src/lua_nginx_module --add-module=/www/server/nginx/src/ngx_cache_purge --add-module=/www/server/nginx/src/nginx-sticky-module --with-openssl=/www/server/nginx/src/openssl --with-pcre=pcre-8.43 --with-http_v2_module --with-stream --with-stream_ssl_module --with-stream_ssl_preread_module --with-http_stub_status_module --with-http_ssl_module --with-http_image_filter_module --with-http_gzip_static_module --with-http_gunzip_module --with-ipv6 --with-http_sub_module --with-http_flv_module --with-http_addition_module --with-http_realip_module --with-http_mp4_module --with-ld-opt=-Wl,-E --with-cc-opt=-Wno-error --with-ld-opt=-ljemalloc --with-http_dav_module --add-module=/www/server/nginx/src/nginx-dav-ext-module</span><br></pre></td></tr></table></figure><h5 id="添加代码"><a href="#添加代码" class="headerlink" title="添加代码"></a>添加代码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--add-module=/home/package/fdfs_nginx_module/fastdfs-nginx-module/src</span><br></pre></td></tr></table></figure><h5 id="添加fastDFS模块（以上两部分整合）"><a href="#添加fastDFS模块（以上两部分整合）" class="headerlink" title="添加fastDFS模块（以上两部分整合）"></a>添加fastDFS模块（以上两部分整合）</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--user=www --group=www --prefix=/www/server/nginx --add-module=/www/server/nginx/src/ngx_devel_kit --add-module=/www/server/nginx/src/lua_nginx_module --add-module=/www/server/nginx/src/ngx_cache_purge --add-module=/www/server/nginx/src/nginx-sticky-module --with-openssl=/www/server/nginx/src/openssl --with-pcre=pcre-8.43 --with-http_v2_module --with-stream --with-stream_ssl_module --with-stream_ssl_preread_module --with-http_stub_status_module --with-http_ssl_module --with-http_image_filter_module --with-http_gzip_static_module --with-http_gunzip_module --with-ipv6 --with-http_sub_module --with-http_flv_module --with-http_addition_module --with-http_realip_module --with-http_mp4_module --with-ld-opt=-Wl,-E --with-cc-opt=-Wno-error --with-ld-opt=-ljemalloc --with-http_dav_module --add-module=/www/server/nginx/src/nginx-dav-ext-module --add-module=/home/package/fdfs_nginx_module/fastdfs-nginx-module/src</span><br></pre></td></tr></table></figure><h5 id="nginx重新编译"><a href="#nginx重新编译" class="headerlink" title="nginx重新编译"></a>nginx重新编译</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --user=www --group=www --prefix=/www/server/nginx --add-module=/www/server/nginx/src/ngx_devel_kit --add-module=/www/server/nginx/src/lua_nginx_module --add-module=/www/server/nginx/src/ngx_cache_purge --add-module=/www/server/nginx/src/nginx-sticky-module --with-openssl=/www/server/nginx/src/openssl --with-pcre=pcre-8.43 --with-http_v2_module --with-stream --with-stream_ssl_module --with-stream_ssl_preread_module --with-http_stub_status_module --with-http_ssl_module --with-http_image_filter_module --with-http_gzip_static_module --with-http_gunzip_module --with-ipv6 --with-http_sub_module --with-http_flv_module --with-http_addition_module --with-http_realip_module --with-http_mp4_module --with-ld-opt=-Wl,-E --with-cc-opt=-Wno-error --with-ld-opt=-ljemalloc --with-http_dav_module --add-module=/www/server/nginx/src/nginx-dav-ext-module --add-module=/home/package/fdfs_nginx_module/fastdfs-nginx-module/src</span><br></pre></td></tr></table></figure><h4 id="make"><a href="#make" class="headerlink" title="make"></a>make</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fatal error: fdfs_define.h: No such file or directory </span><br><span class="line">fatal error: common_define.h: No such file or directory</span><br></pre></td></tr></table></figure><p>vim 打开makefile目录下边的 objs/Makefile </p><p>在这个makefile中添加两个头文件 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /www/server/nginx/src/objs/Makefile</span><br><span class="line"></span><br><span class="line"># 添加以下语句</span><br><span class="line">-I usr/include/fastdfs \</span><br><span class="line">-I usr/include/fastcommon \</span><br></pre></td></tr></table></figure><h4 id="make-install"><a href="#make-install" class="headerlink" title="make install"></a>make install</h4><h5 id="未安装nginx"><a href="#未安装nginx" class="headerlink" title="未安装nginx"></a>未安装nginx</h5><p>直接make install</p><h5 id="已安装"><a href="#已安装" class="headerlink" title="已安装"></a>已安装</h5><p>复制编译后产生的nginx文件，替换旧的nginx文件（自己需提前备份）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /www/server/nginx/src/objs/nginx /www/server/nginx/sbin/</span><br></pre></td></tr></table></figure><h3 id="nginx启动"><a href="#nginx启动" class="headerlink" title="nginx启动"></a>nginx启动</h3><p>启动nginx, 只有一个master没有worker</p><p>查看日志文件 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/nginx/logs/error.log </span><br><span class="line"></span><br><span class="line">ERROR - file: shared_func.c, line: 968, file  /etc/fdfs/mod_fastdfs.conf not exist </span><br><span class="line">#拷贝fastdfs-nginx-module/src中的mod_fastdfs.conf到/etc/fdfs/中</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ERROR - file: ini_file_reader.c, line: 631, include file &quot;http.conf&quot; not exists, line: &quot;#include http.conf&quot;</span><br><span class="line">#从fastDFS的源码安装包中的conf中 将http.conf 拷贝到 /etc/fdfs/</span><br><span class="line">#从nginx的源码安装包中的conf中mime.types拷贝到 /etc/fdfs/</span><br></pre></td></tr></table></figure><h1 id="mod-fastdfs-conf-配置文件"><a href="#mod-fastdfs-conf-配置文件" class="headerlink" title="mod_fastdfs.conf 配置文件"></a>mod_fastdfs.conf 配置文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">base_path=/home/fastDFS/storage #log日志目录</span><br><span class="line">tracker_server=公网:22122 #追踪器的地址</span><br><span class="line">storage_server_port=23000 #当前存储节点的端口</span><br><span class="line">group_name=group1 #当前存储节点所属的组</span><br><span class="line">url_have_group_name = true #浏览器访问的时候, url中是否包含组名</span><br><span class="line">store_path_count=1 #当前存储节点存储路径的个数</span><br><span class="line">store_path1 store_path2 #如果有多个, 需要全部写到配置文件中</span><br><span class="line">store_path0=/home/robin/fastDFS/storage #当前存储节点的存储路径</span><br><span class="line">group_count = 1 #整个的fastDFS文件系统一共有多少个组</span><br><span class="line">[group1] #每个组信息</span><br><span class="line">group_name=group1</span><br><span class="line">storage_server_port=23000</span><br><span class="line">store_path_count=1</span><br><span class="line">store_path0=/home/fastDFS/storage</span><br></pre></td></tr></table></figure><h1 id="nginx配置文件添加location"><a href="#nginx配置文件添加location" class="headerlink" title="nginx配置文件添加location"></a>nginx配置文件添加location</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location /group1/M00&#123;</span><br><span class="line">    root   /home/fastdfs/storage/data;</span><br><span class="line">    ngx_fastdfs_module;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之前上传的图片路径为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">group1/M00/00/00/rBEx3l5k7cmAW6eiAAGyE0VtDsM290.jpg</span><br></pre></td></tr></table></figure><p>访问链接</p><p><a href="http://39.96.209.253/group1/M00/00/00/rBEx3l5k7cmAW6eiAAGyE0VtDsM290.jpg" target="_blank" rel="noopener">http://39.96.209.253/group1/M00/00/00/rBEx3l5k7cmAW6eiAAGyE0VtDsM290.jpg</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h1&gt;&lt;p&gt;服务器：Linux（CentOS 7.x，Ubuntu）&lt;/p&gt;
&lt;h2 id=&quot;Nginx安装&quot;&gt;&lt;a href=&quot;#Ng
      
    
    </summary>
    
      <category term="程序人生" scheme="http://qianyouyou.cn/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/"/>
    
      <category term="Linux" scheme="http://qianyouyou.cn/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/Linux/"/>
    
    
      <category term="Linux" scheme="http://qianyouyou.cn/tags/Linux/"/>
    
      <category term="大数据" scheme="http://qianyouyou.cn/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="分布式" scheme="http://qianyouyou.cn/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="FastDFS" scheme="http://qianyouyou.cn/tags/FastDFS/"/>
    
      <category term="Nginx" scheme="http://qianyouyou.cn/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>在山的那边，还是山</title>
    <link href="http://qianyouyou.cn/2020/01/23/2020-01-23/"/>
    <id>http://qianyouyou.cn/2020/01/23/2020-01-23/</id>
    <published>2020-01-23T04:22:37.000Z</published>
    <updated>2020-01-23T05:16:15.391Z</updated>
    
    <content type="html"><![CDATA[<p>人生天地间，忽如远行客。人从诞生起，便是一场走向死亡的旅程。，我们别无选择的被命运推着向前走，不能回头。虽然人生这场旅程中，我们没办法回头，但是上帝赋予了我们每个人选择的权利。尽管每个人会走向同样的终点，但每个人都身处不同的起点，拥有自己道路的选择权，这就注定了每个人在旅程中会遇到不一样的风景。</p><p>有人说，我们降临到世上，要么是疯子，要么是傻子。疯子风雨兼程，义无反顾；傻子知足常乐，安之若素。其实这话说的也不错，就像人生的分岔路口上，都会有崎岖的山路，也会有平稳的坦途。选择山路，比较辛苦，随时都有跌落山谷的危险，但沿途能欣赏广阔的风景；选择坦途，比较轻松，不用思考任何风险，但也失去了广阔的风景。就像每个人都会问自己，是想成为马云，还是想成为佛祖。每个人都会有自己的选择，谁也没有资格评论其他人的选择，唯一能做的，就是不忘初心，坚持自己的选择。</p><p>我时常会问自己，究竟是选择山路，还是选择坦途。很多时候，我都会犹豫不决，一方面是对挫折的恐惧，一方面又不甘于碌碌无为。但这个时候，上帝总会帮我寻找心中所向往的那片风景。秋招时，因为恐惧面试，而草草的签了三方协议。尽管薪资达不到自己的预期，但还是选择了安稳。本以为从此之后便再也没办法回头，但还是遇到了人生的伯乐，经过心理上克服面试的恐惧，最终成功签约自己心仪的公司。</p><p>当我们历经磨难，踏上山巅时，已经欣赏到了更远阔的风景，也收获了沿途克服崎岖的喜悦。但我们的人生没有暂停键，也没有后退键。这时候，我们依旧要向前走，但当我们到达一座山顶时，四周的路只能向下。而山那边，依然是山。我们别无选择继续跨越前方的山。就像我，因为签约了新的公司，必须想办法解约三方协议，而我们作为违约的一方，就必须承担责任，想获得学校一方的同意挺难，因为有很多流程，谁也不想自己太麻烦；以前的公司不会简简单单的帮助我们违约，违约不违约都是要交违约金，而且没违约成功，未来在旧公司里也会备受排挤。而此刻的我，没有回头路，只能继续向前。</p><p>当我们选择山路时，往往也会向往安稳的坦途，但身在山路，稍不留神便会跌落谷底。与其后悔，不妨继续享受这沿途的风景。我们之所以害怕山路，其实是对挫折的恐惧。就像我对与学校和公司违约谈判的恐惧，对这个过程中可能遇到的各种麻烦一样。但是任何没有打倒我们的力量，只能让我们的内心变得更强大。因此，此刻正望着另一座山的我，定要把挫折当做使自己变得强大的力量，战胜恐惧，欣赏风景，坚定向前。就像汪国真《热爱生命》中写的那样：</p><p>我不去想是否能够成功<br>既然选择了远方<br>便只顾风雨兼程</p><p>我不去想能否赢得爱情<br>既然钟情于玫瑰<br>就勇敢地吐露真诚</p><p>我不去想身后会不会袭来寒风冷雨<br>既然目标是地平线<br>留给世界的只能是背影</p><p>我不去想未来是平坦还是泥泞<br>只要热爱生命<br>一切，都在意料之中</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;人生天地间，忽如远行客。人从诞生起，便是一场走向死亡的旅程。，我们别无选择的被命运推着向前走，不能回头。虽然人生这场旅程中，我们没办法回头，但是上帝赋予了我们每个人选择的权利。尽管每个人会走向同样的终点，但每个人都身处不同的起点，拥有自己道路的选择权，这就注定了每个人在旅程
      
    
    </summary>
    
      <category term="心路历程" scheme="http://qianyouyou.cn/categories/%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B/"/>
    
      <category term="散文" scheme="http://qianyouyou.cn/categories/%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B/%E6%95%A3%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>爱你所爱，行你所行，听从你心，无问西东</title>
    <link href="http://qianyouyou.cn/2019/12/17/2019-12-17/"/>
    <id>http://qianyouyou.cn/2019/12/17/2019-12-17/</id>
    <published>2019-12-17T13:34:08.000Z</published>
    <updated>2019-12-17T15:57:46.511Z</updated>
    
    <content type="html"><![CDATA[<p>对于这部电影，早有耳闻，毕竟王菲的《无问西东》与毛不易的《无问》都是我时常聆听的歌。只是不知何时起，被生活中的各种琐事困扰，渐渐地，失去了对美好世界的向往，以及静下心来欣赏好电影的热忱。正在迷茫之际，所幸遇到这部电影以及它所传达的救赎之道，又点亮了我内心所向往的那道光。</p><p>影片分为了四个小故事，背景分别在当代，文革时代，战火时代，以及那个咆哮的时代。通过职场，爱情，家国，自我救赎，四个主题，以救赎为牵引线，化作了一个故事，共同传达了爱与传承的主旨。</p><p>电影首先讲述的是生活在当代尔虞我诈的职场，每天愁眉苦脸的男主张果果，因为上司的设计而背黑锅被迫离职。在新的公司里，因为看到曾经能帮助而未尽力帮助的四胞胎家庭如今生活落魄，决定通过事业帮助这个家庭。在医院看望四胞胎婴儿时，他向婴儿家人承诺会争取四胞胎的手术费。而在对他们提供帮助后，前公司的老总告诉他一些过往的经历劝他小心。他开始怀疑四胞胎的家人从此以后赖上了他。而同时老总给男主提供了一个揭发曾经算计他的上司丑陋罪行的机会。面对心中善恶的审批，男主该如何回应呢。</p><p>第二个故事发生在文革前。黄晓明饰演的陈鹏是一个大学的优等生，章子怡饰演的王敏佳与铁政饰演的李想则是医学院的一个学生，三人从小便是相依相伴的孤儿。陈鹏一直喜欢着王敏佳，原本打算为爱放弃事业时，却看到王敏佳和李想两个人暧昧，选择了离开。王敏佳和李想看到师母殴打恩师，写信为恩师打抱不平，却遭到师母的告状。面对李想的前程，王敏佳选择独自承担，却遭到了各个阶级莫须有的罪名，李想自始至终选择沉默。最终在批判大会上含冤死去。</p><p>第三个故事讲述的是飞行家的故事，王力宏饰演的沈光耀原本是富家子弟，文武兼备，因为一腔热血，报名空军，却遭到家人的反对，最终选择放下功名，安之若素。之后却看着日军狂轰乱炸，在国与家的面前，他该何去何从。</p><p>第四个故事比较简单，由陈楚生饰演的吴岭澜国学与英语成绩优异，然而当时正值实业救国思潮，本是文科好苗子的他选择了理工科，然而却因物理成绩垫底被迫重新作出选择。对于自己所擅长的文科与实用的理科，他该如何选择。</p><p>最终，吴岭澜听了泰戈尔的演讲，明白了那些伟人以及引领时代的人其实不一定都是实业家，他们其实时时刻刻都在对生命的价值进行思索。最终他毅然遵从内心，选择了文科，从此当一名教师，传道受业解惑。</p><p>而正是吴岭澜的几句话，影响了沈光耀，在日军轰炸同胞，战火迷离之际，他选择了当一名飞行员，为保家卫国献上了自己最绚烂的青春。 在他执行飞行任务时，总不忘将食物从空中撒向贫民区。从自己的村子，到飞机途径的各个村子，都有他所传递的那份爱。</p><p>正因为沈光耀的选择，才救助了陈鹏他们所在的村子，造就了陈鹏一村人感恩的心。最终陈鹏为爱返乡，将濒死的王敏佳带回村子，托付给村子救助。因为陈鹏的守护，王敏佳才有了生的希望。</p><p>在陈鹏的感染下，李想最终在大雪纷飞的雪地里将食物留给了素不相识的张果果的父母，最终自己却冻死了。而每年，张果果一家不管多忙碌，总会在清明节那天去为李想扫墓。正是因为这份爱与传递，最终感染了张果果，他最终洗涤了心中世俗化的感染，无偿为四胞胎的父母提供了住所与工作，也主动选择放弃揭发曾经算计自己的上司。</p><p>满怀热忱的我们，无可避免都得经受现实的洗礼。</p><p>还记得王敏佳在批判大会上的那抹笑容。当她环顾四周，心中所盼望的两个男人统统不在，周围全是乌合之众的谩骂，她笑了。正是因为这一抹笑，引来了群众的不满，由谩骂变成了毒打，使王敏佳付出自己的生命。看到这里，我首先想到的是《鬼子来了》中，姜文最后人头落地时的仰天长笑。那三声长笑，看似荒诞，但正是在嘲讽这荒诞的世界，这没有正义，只有灰色的世界。</p><p>在理想与现实的十字路口上，我们该何去何从。</p><p>影片中，张果果和老总形成了鲜明的对比，是理想与现实的对比。老总在抱怨他曾经帮助过的孩子最终却向自己要房子要工作，而张果果听了老总的劝告，经历了思想斗争之后，却选择主动为四胞胎家庭提供住所与工作。看到这里，我想到了《我不是药神》中程勇由最初为了利益卖药到最后以德报怨主动倒贴钱卖药给穷人的转变。这是一种救赎。能力越大，责任就越大。张果果身为广告公司总监，主动选择将爱传递给那些需要帮助的人，这也是一种救赎。但我们也不能全怪老总，毕竟老总曾经也想过帮助别人，只是没有坚持下去，他所得到的是社会的一次鞭挞，从此被世俗同化，做一条狼。在理想与现实的十字路口，多少人因为社会的一次次的鞭挞而选择向现实妥协，将中心转向了自我，而又有几个人会像道成肉身的耶稣那样以德报怨，选择自己被钉上十字架来替世人赎罪呢。</p><p>当我们选择负重前行时，谁来为我们护航呢。</p><p>在王敏佳环顾四周，心中充满期盼，却又孤立无援的时候，我又想到了《闻香识女人》，查理在遭到同学的冷眼旁观与学校的威逼利诱之时，在自己的前途与心中的道义选择之时，遵从内心，坚守正义与准则。但不同于查理，查理在被勒令退学，心中充满迷茫之时，有老中校的保护，而王敏佳此刻却一无所有。这让我不禁感叹，其实我们每个人都曾满怀热忱选择拥抱这世界，但当我们被这灰色社会各种折磨之时，谁来像老中校那样保护我们的坚守呢。最终大部分人都被这社会所同化，变成了自己曾经最讨厌的那种人。影片毕竟不是悲剧，所幸剧情最终安排陈鹏回到了王敏佳身边，守护王敏佳对这世界最后的一丝好感。</p><p>每个人都认为自己是对的，因此我们需要成长。</p><p>沈光耀原本是富家子弟，却选择当一名飞行员保家卫国，同时救济贫民。但刚开始时，他每次都是擅自开飞机为自己学校所在的村子送食物。他的上司罚他，同时也道出了原因，他这样做，看似义举，但每次同样的路线，只会引来敌人的追踪，最终导致村子遭到敌人的狂轰乱炸。看到这里，我不仅揪起了心。我们每个人其实刚开始时都认为自己是对的，就像王敏佳只看到了师母殴打恩师的表象，却忽略了恩师对师母的冷落，因此她将师母抹黑，遭到师母的告发。而同样因为师母的一句话，群众们又谩骂变成毒打，险些让王敏佳丧命。显然，师母当时因为嫉妒与愤怒，导致一个人前程与生命被毁。她其实也是无心之过，也是被这世界摧残的遍体鳞伤，不然也不会在最后在内疚与绝望中选择跳井自杀。有时候，我们自己的一点点微不足道的私欲或自以为是的正义可能会给其他人带来不可弥补的伤害。</p><p>成长中的负重前行，方得始终。</p><p>最终沈光耀的故事算是最完美的结局。他后来不断改变路线，给村子驱赶饥饿的同时保证了村子的安全。同时，将小义变成了大义，所到之处都有他的带来的食物。人们亲切地称他为晃晃叔叔。</p><p>当影片《奇异恩典》想起，我便明白，正值迷茫之际，此电影以救赎之道，为我曾经人生十字路口的选择保驾护航。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;对于这部电影，早有耳闻，毕竟王菲的《无问西东》与毛不易的《无问》都是我时常聆听的歌。只是不知何时起，被生活中的各种琐事困扰，渐渐地，失去了对美好世界的向往，以及静下心来欣赏好电影的热忱。正在迷茫之际，所幸遇到这部电影以及它所传达的救赎之道，又点亮了我内心所向往的那道光。&lt;/
      
    
    </summary>
    
      <category term="心路历程" scheme="http://qianyouyou.cn/categories/%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B/"/>
    
      <category term="影评" scheme="http://qianyouyou.cn/categories/%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B/%E5%BD%B1%E8%AF%84/"/>
    
    
  </entry>
  
  <entry>
    <title>中国没有汉尼拔</title>
    <link href="http://qianyouyou.cn/2019/12/09/2019-12-09/"/>
    <id>http://qianyouyou.cn/2019/12/09/2019-12-09/</id>
    <published>2019-12-09T12:01:10.000Z</published>
    <updated>2019-12-09T13:29:00.200Z</updated>
    
    <content type="html"><![CDATA[<p>每个人生下来便是羔羊，由牧民圈养着。牧民们为羊儿们提供丰厚的草料，但当它们的毛丰厚了便拔他们的毛，当它们的肉肥了便割他们的肉。有些羊不断提升自己的生产能力，逃出了羊圈，自力更生，从此遭到牧民以及其他羔羊的唾弃；有些羊努力进化成了野牛，起初野牛会保护羊群，但那些曾经意气风发的野牛们最终收获足够多的羔羊认同时，便会变成野牛比尔，同牧民合作，一起宰羊。而大部分的羊，为了一时安稳，看着同类的种种变化，不理不睬，久而久之便成了沉默的羔羊。</p><p>常常在耳边听到这样的说法：“如果每个人给我一毛，那我就是亿万富翁。”其实说到底，每个人都懂这一点，关键是如何让别人拔毛给你，而且是每个人。每当听到这样的话，我心中的暗自嘲讽，幸好有个如果，因为当你真的能让所有人给你一毛时，你变会想每人给你更多。</p><p>还记得《美国往事》中工人运动的领袖吉米掌权后的腐败嘴脸。那些曾经意气风发的企业家们，用各种福利拉拢用户，挽留用户，就像拼多多……然而不是所有私企都能挽留住用户，就像共享单车……最终收获足够多的用户量时，便同国企合作，让你们离不开他们，还得乖乖拔毛给他们，就像腾讯……</p><p>曾经意气风发的马云说过，他创立阿里巴巴就是让那些坐在移动、银行办公室里的人不得安宁。的确，他做到了，也成为了第一个汉尼拔。然而，伴随着的退休，谁也说不清楚什么情况。那个汉尼拔只剩传说了，每个想成为汉尼拔的人最终却变成了野牛比尔。</p><p>最近移动20周年庆典，然而却是变了花样的让用户交钱。当客服给用户打电话说庆典时，本以为是福利回馈，没想到又是变了花样的敲诈。这就是和某些私企的差别，私企通常庆典上各种福利回馈用户，国企反而再敲用户一下。</p><p>可笑的是每次私企出了问题用户各种骂，国企的话早已麻木了。就像曾经丰巢的1块钱事件。然而因1块钱声讨丰巢，却没人反映移动几十块的敲诈，这不是很讽刺吗。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;每个人生下来便是羔羊，由牧民圈养着。牧民们为羊儿们提供丰厚的草料，但当它们的毛丰厚了便拔他们的毛，当它们的肉肥了便割他们的肉。有些羊不断提升自己的生产能力，逃出了羊圈，自力更生，从此遭到牧民以及其他羔羊的唾弃；有些羊努力进化成了野牛，起初野牛会保护羊群，但那些曾经意气风发的
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>浅谈构造函数</title>
    <link href="http://qianyouyou.cn/2019/10/21/2019-10-21/"/>
    <id>http://qianyouyou.cn/2019/10/21/2019-10-21/</id>
    <published>2019-10-20T23:36:23.000Z</published>
    <updated>2019-10-20T23:57:43.089Z</updated>
    
    <content type="html"><![CDATA[<p>说道构造函数，大家可能都不陌生，但构造函数到底是什么作用呢。这个问题就好像我们大家都会用C++，但没几人敢说自己精通C++一样。我们先来看一看最简单的例子吧。</p><h2 id="question"><a href="#question" class="headerlink" title="question"></a>question</h2><p>已知类a继承类b且包含类c，求a，b，c的构造顺序。</p><h3 id="answer"><a href="#answer" class="headerlink" title="answer"></a>answer</h3><p>b &gt; c &gt; a</p><p>这个答案大家肯定知道，但为什么呢，对于该问题一般那些资深C++开发者一眼就能看出你是有自己的理解还是书本式的记忆，因此不要试图用书本式的解释。</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>其实构造函数也没那么神秘，就是用来初始化数据，为对象的创建做准备的。这不废话么。有了这个认识，那为什么上面是bca，而不是其他顺序呢。好像没什么必然的联系。但是，以初始化为主的构造函数，那没有数据的话怎么初始化数据呢。因此，a包含c，那么c就是a数据的一部分，没有c的话a就无法初始化。因此c &gt; a。a继承于b，子类和父类的关系根据名称也知道，子类继承了父类的数据，父类也是子类的一部分，因此b &gt; a。abc这三者的关系就好似儿子、父亲和儿子的细胞。没有父亲，就没有儿子的全部，自然也没有儿子的细胞。所以答案自然而然。</p><h2 id="初始化顺序"><a href="#初始化顺序" class="headerlink" title="初始化顺序"></a>初始化顺序</h2><p>直接初始化&gt;初始化列表&gt;构造函数</p><h2 id="RAII"><a href="#RAII" class="headerlink" title="RAII"></a>RAII</h2><p>在C++11特性中，出现了RAII的思想，就是构造中分配内存，析构中释放内存。这也是智能指针保证安全性的原因。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;说道构造函数，大家可能都不陌生，但构造函数到底是什么作用呢。这个问题就好像我们大家都会用C++，但没几人敢说自己精通C++一样。我们先来看一看最简单的例子吧。&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;&lt;a href=&quot;#question&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="程序人生" scheme="http://qianyouyou.cn/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/"/>
    
      <category term="C/C++" scheme="http://qianyouyou.cn/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/C-C/"/>
    
    
      <category term="C/C++" scheme="http://qianyouyou.cn/tags/C-C/"/>
    
      <category term="构造函数" scheme="http://qianyouyou.cn/tags/%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>FastDFS分布式文件系统总结</title>
    <link href="http://qianyouyou.cn/2019/10/03/2019-10-03/"/>
    <id>http://qianyouyou.cn/2019/10/03/2019-10-03/</id>
    <published>2019-10-03T04:36:04.000Z</published>
    <updated>2020-03-09T04:02:26.856Z</updated>
    
    <content type="html"><![CDATA[<h1 id="分布式存储"><a href="#分布式存储" class="headerlink" title="分布式存储"></a>分布式存储</h1><p>首先，什么是分布式存储，简而言之，就是将数据存储到多个存储设备（服务器）上。</p><h2 id="分布式与传统网络存储系统区别"><a href="#分布式与传统网络存储系统区别" class="headerlink" title="分布式与传统网络存储系统区别"></a>分布式与传统网络存储系统区别</h2><p>传统的网络存储系统采用集中的存储服务器存放所有数据，存储服务器成为系统性能的瓶颈，也是可靠性和安全性的焦点，不能满足大规模存储应用的需要。<img src="https://qianyouyou-1258651414.cos.ap-chengdu.myqcloud.com/img/19-10-03-%E4%BC%A0%E7%BB%9F%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F.png" alt></p><p>分布式网络存储系统采用可扩展的系统结构，利用多台存储服务器分担存储负荷，利用位置服务器定位存储信息，它不但提高了系统的可靠性、可用性和存取效率，还易于扩展。</p><p><img src="https://qianyouyou-1258651414.cos.ap-chengdu.myqcloud.com/img/19-10-03-%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F.png" alt></p><h1 id="FastDFS"><a href="#FastDFS" class="headerlink" title="FastDFS"></a>FastDFS</h1><p>FastDFS是一款开源的分布式文件系统，通过纯C实现，支持Linux, FreeBSD等Unix系统类Google FS, 不是通用的文件系统，只能够通过专有API访问，目前提供了C，Java和PHP API为互联网应用量身定做，解决大容量文件存储问题，追求高性能和高扩展性 FastDFS可以看做是基于文件的key-value存储系统，称为分布式文件存储服务更为合适。</p><p>功能包括：文件存储、文件同步、文件访问（文件上传、文件下载、文件删除）等，解决了大容量存储和负载均衡的问题。</p><ul><li><p>为互联网量身定制，充分考虑了冗余备份、负载均衡、线性扩容等机制，并注重高可用、高性能等指标</p></li><li><p>可以很容易搭建一套高性能的文件服务器集群提供文件上传、下载等服务。</p><ul><li>图片服务器</li><li>图床</li></ul></li></ul><ol><li><p>fastDFS特点:</p></li><li><ul><li>应用层级的文件系统</li><li>不能挂载和卸载，也就是不能进行mount操作</li></ul></li><li><p>fastDFS框架中的三个角色</p></li><li><ul><li>追踪器 - tracker</li><li>存储节点 - storage</li></ul></li><li><ul><li>客户端 - client</li></ul></li><li><p>fastDFS三个角色之间的关系</p></li><li><ul><li><p>Client和Storage主动连接Tracker。</p></li><li><p>Storage主动向Tracker报告其状态信息</p><ul><li>磁盘剩余空间</li><li>文件同步状况</li><li>文件上传下载次数</li></ul></li><li><p>Storage会启动一个单独的线程来完成对一台Tracker的连接和定时报告。</p></li><li><p>一个组包含的Storage不是通过配置文件设定的，而是通过Tracker获取到的。</p></li></ul></li></ol><h2 id="FastDFS集群"><a href="#FastDFS集群" class="headerlink" title="FastDFS集群"></a>FastDFS集群</h2><p><img src="https://qianyouyou-1258651414.cos.ap-chengdu.myqcloud.com/img/19-10-03-Fast%E9%9B%86%E7%BE%A4.png" alt></p><ol><li><p>Tracker集群</p></li><li><ul><li>Tracker server之间是相互平等关系同时提供服务</li><li>Tracker server不存在单点故障。</li><li>客户端请求Tracker       server采用轮询方式，如果请求的tracker无法提供服务则换另一个tracker。</li></ul></li><li><p>Storage集群</p></li><li><ul><li>Storage集群采用了分组存储方式, 由一个或多个组构成</li><li>集群存储总容量为集群中所有组的存储容量之和</li><li>一个组由一台或多台存储服务器组成，组内的Storage       server之间是平等关系</li><li>不同组的Storage       server之间不会相互通信，同组内的Storage server之间会相互连接进行文件同步，从而保证同组内每个storage上的文件完全一致的。</li><li>一个组的存储容量为该组内存储服务器容量最小的那个</li></ul></li><li><p>FastDFS的扩容分纵向扩容与横向扩容</p></li><li><ul><li>横向 扩容<ul><li>增加容量</li><li>添加group组</li></ul></li><li><p>纵向扩容</p><ul><li>数据备份</li><li><p>当前组的最大容量  </p><ul><li>存储节点中容量最小的那个</li></ul></li><li><p>所有存储节点组名必须一样</p></li></ul></li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;分布式存储&quot;&gt;&lt;a href=&quot;#分布式存储&quot; class=&quot;headerlink&quot; title=&quot;分布式存储&quot;&gt;&lt;/a&gt;分布式存储&lt;/h1&gt;&lt;p&gt;首先，什么是分布式存储，简而言之，就是将数据存储到多个存储设备（服务器）上。&lt;/p&gt;
&lt;h2 id=&quot;分布式与传统网
      
    
    </summary>
    
      <category term="程序人生" scheme="http://qianyouyou.cn/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/"/>
    
      <category term="Linux" scheme="http://qianyouyou.cn/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/Linux/"/>
    
    
      <category term="操作系统" scheme="http://qianyouyou.cn/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="Linux" scheme="http://qianyouyou.cn/tags/Linux/"/>
    
      <category term="大数据" scheme="http://qianyouyou.cn/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="分布式" scheme="http://qianyouyou.cn/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="FastDFS" scheme="http://qianyouyou.cn/tags/FastDFS/"/>
    
  </entry>
  
  <entry>
    <title>原创位运算版算法解决24点问题</title>
    <link href="http://qianyouyou.cn/2019/09/26/2019-09-26/"/>
    <id>http://qianyouyou.cn/2019/09/26/2019-09-26/</id>
    <published>2019-09-26T02:21:49.000Z</published>
    <updated>2019-09-26T02:43:18.706Z</updated>
    
    <content type="html"><![CDATA[<p>首先说一下什么是24点吧。随机4个数，这四个数能否通过加减乘除得到24。比如1,2,3,3，就可以通过2 <em> 3 </em> (3 + 1) = 24。再比如3,8,8,3，就可以通过8 / (3 - 3 / 8)得到。而1,1,1,1永远无法得到24点。我们如今需要判断当前4个数能否得到24点（当然求具体步骤也可以的，只需要代码中稍微加点东西）</p><p>我的方法是采用位运算，也就是二进制表示状态，0001表示第1个数，0010表示第2个数，0100表示第3个数，1000表示第4个数，0011表示第1个数和第2个数间所有的操作，同理1111就表示4个数之间所有的操作，1111可以有1100与0011进行加减乘除操作得到，也可以通过1011和0100得到……我们最后只需看1111里面是否有24即可（保存步骤的话需要自定义结构体，既添加字符状态）。</p><p>我们用set容器来存储当前状态下的所有结果（去重），那么set[1]即0001就是保存第一个数，set[2]即0010就是保存第二个数，set[3]即0011就是保存第一个数和第二个数的所有结果……某set可由其他两set的数据得出（例如0011可由0010和0001得到），则每次依次遍历其他两个set中所有元素再将新的结果插入到当前set中，这样从1遍历到15即可。</p><p>通过列真值表，00=0,01=0,10=1,11=0，我们可以得到a与!b即可得到想要的结果c，例如1011与!0010得到1001，当然c必须保证c不等于a且c不为0。而为了剪枝，我们也可以让c小于b。因此可以添加以下条件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int k = (i &amp; (~j));</span><br><span class="line">if(k != 0 &amp;&amp; k != i &amp;&amp; k &lt; j)</span><br></pre></td></tr></table></figure><p>两个数之间加减乘除共有6种结果，a+b,a-b,b-a,a * b, a / b, b / a，因此我们将相应结果存入set（集合为了去重，如果需要详细步骤则可用其他容器，不必用set，因为步骤需要保存状态）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">for(it = m_set[j].begin(); it != m_set[j].end(); it++)&#123;</span><br><span class="line">    for(it2 = m_set[k].begin(); it2 != m_set[k].end(); it2++)&#123;</span><br><span class="line">        m_set[i].insert((*it) + (*it2));</span><br><span class="line">        m_set[i].insert((*it) * (*it2));</span><br><span class="line">        m_set[i].insert((*it) - (*it2));</span><br><span class="line">        m_set[i].insert((*it2) - (*it));</span><br><span class="line">        if((*it2) != 0) m_set[i].insert((*it) / (*it2));</span><br><span class="line">        if((*it) != 0) m_set[i].insert((*it2) / (*it));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样我们就可以通过4层循环（因为只有4个数嘛，n范围也就是4）完成24点的判断了。以下是详细代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;bits/stdc++.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">set&lt;double&gt;m_set[1 &lt;&lt; 4];</span><br><span class="line">const double ens = 1e-10;</span><br><span class="line">double a[4];</span><br><span class="line">int main()&#123;</span><br><span class="line">    while(cin &gt;&gt; a[0] &gt;&gt; a[1] &gt;&gt; a[2] &gt;&gt; a[3])&#123;</span><br><span class="line">        for(int i = 0; i &lt; 16; ++i)&#123;</span><br><span class="line">            m_set[i].clear();</span><br><span class="line">        &#125;</span><br><span class="line">        for(int i = 0; i &lt; 4; ++i)&#123;</span><br><span class="line">            m_set[1 &lt;&lt; i].insert(a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        for(int i = 1; i &lt; 16; ++i)&#123;</span><br><span class="line">            for(int j = 1; j &lt; i; ++j)&#123;</span><br><span class="line">                int k = (i &amp; (~j));</span><br><span class="line">                if(k != 0 &amp;&amp; k != i &amp;&amp; k &lt; j)&#123;</span><br><span class="line">                    //cout &lt;&lt; k &lt;&lt; &quot;&amp;~&quot; &lt;&lt; j &lt;&lt; &quot;=&quot; &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">                    set&lt;double&gt;::iterator it, it2;</span><br><span class="line">                    for(it = m_set[j].begin(); it != m_set[j].end(); it++)&#123;</span><br><span class="line">                        for(it2 = m_set[k].begin(); it2 != m_set[k].end(); it2++)&#123;</span><br><span class="line">                            m_set[i].insert((*it) + (*it2));</span><br><span class="line">                            m_set[i].insert((*it) * (*it2));</span><br><span class="line">                            m_set[i].insert((*it) - (*it2));</span><br><span class="line">                            m_set[i].insert((*it2) - (*it));</span><br><span class="line">                            if((*it2) != 0) m_set[i].insert((*it) / (*it2));</span><br><span class="line">                            if((*it) != 0) m_set[i].insert((*it2) / (*it));</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        set&lt;double&gt;::iterator it;</span><br><span class="line">        for(it = m_set[15].begin(); it != m_set[15].end(); it++)&#123;</span><br><span class="line">            if(fabs(*it - 24) &lt; ens)&#123;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if(it != m_set[15].end())&#123;</span><br><span class="line">            cout &lt;&lt; &quot;yes&quot; &lt;&lt; endl;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            cout &lt;&lt; &quot;no&quot; &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另附原始递归代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;bits/stdc++.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const double ins = 0.0000001;</span><br><span class="line">double val[4];</span><br><span class="line">bool dfs(int cur, double res)&#123;</span><br><span class="line">  double ans = res;</span><br><span class="line">  if(fabs(ans - 24) &lt; ins &amp;&amp; cur == 4)&#123;</span><br><span class="line">    return true;</span><br><span class="line">  &#125;else if (cur &gt;= 4)&#123;</span><br><span class="line">    return false;</span><br><span class="line">  &#125;</span><br><span class="line">  if(dfs(cur + 1, ans + val[cur])</span><br><span class="line">     || dfs(cur + 1, ans - val[cur])</span><br><span class="line">     || dfs(cur + 1, -ans + val[cur])</span><br><span class="line">     || (cur &gt; 0 &amp;&amp; dfs(cur + 1, ans * val[cur]))</span><br><span class="line">     || dfs(cur + 1, cur &gt; 0 ? ans / val[cur] : 1 / val[cur])</span><br><span class="line">     || (ans != 0 &amp;&amp; dfs(cur + 1, val[cur] / ans))</span><br><span class="line">    )&#123;</span><br><span class="line">    return true;</span><br><span class="line">  &#125;</span><br><span class="line">  return false;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">    double v[4];</span><br><span class="line">    for(int i = 0; i &lt; 4; ++i)&#123;</span><br><span class="line">    cin &gt;&gt; v[i];</span><br><span class="line">    &#125;</span><br><span class="line">    bool flag = false;</span><br><span class="line">    for(int i = 0; i &lt; 4; ++i)&#123;</span><br><span class="line">        for(int j = 0; j &lt; 4; ++j)&#123;</span><br><span class="line">            if(j == i)&#123;</span><br><span class="line">                continue;</span><br><span class="line">            &#125;</span><br><span class="line">            for(int k = 0; k &lt; 4; ++k)&#123;</span><br><span class="line">                if(k == i || k == j)&#123;</span><br><span class="line">                    continue;</span><br><span class="line">                &#125;</span><br><span class="line">                val[0] = v[i];</span><br><span class="line">                val[1] = v[j];</span><br><span class="line">                val[2] = v[k];</span><br><span class="line">                val[3] = v[6 - i - j - k];</span><br><span class="line">                flag = dfs(0, 0);</span><br><span class="line">                if(flag)&#123;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            if(flag)&#123;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if(flag)&#123;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if(flag)&#123;</span><br><span class="line">        cout &lt;&lt; &quot;Yes&quot; &lt;&lt; endl;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        cout &lt;&lt; &quot;No&quot; &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先说一下什么是24点吧。随机4个数，这四个数能否通过加减乘除得到24。比如1,2,3,3，就可以通过2 &lt;em&gt; 3 &lt;/em&gt; (3 + 1) = 24。再比如3,8,8,3，就可以通过8 / (3 - 3 / 8)得到。而1,1,1,1永远无法得到24点。我们如今需要
      
    
    </summary>
    
      <category term="程序人生" scheme="http://qianyouyou.cn/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/"/>
    
      <category term="算法" scheme="http://qianyouyou.cn/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://qianyouyou.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="位运算" scheme="http://qianyouyou.cn/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>在任务跳转问题上，C#的委托delegate与工厂方法模式的异曲同工之妙</title>
    <link href="http://qianyouyou.cn/2019/08/28/2019-08-28/"/>
    <id>http://qianyouyou.cn/2019/08/28/2019-08-28/</id>
    <published>2019-08-28T12:56:41.000Z</published>
    <updated>2019-09-07T05:27:59.563Z</updated>
    
    <content type="html"><![CDATA[<p>在玩游戏时，常常会有任务跳转。但当跳转类型过多时，对游戏研发者来说，就是一件头疼的事了。之前在做游戏城镇等级模块时，就遇到了任务跳转过多的问题。刚接到任务跳转这个需求时，由于入门未深，便用if-else写的。可以想象一百多行的if-else或者switch是多么壮观啊。。。</p><p>但是当我们只为了完成当日任务，而不为长远维护考虑，那未来将是一件可怕的事情。而且那样的代码，像我这样的人看着也不舒服。</p><p>最近看了C#高级语法，赫然发现C#中的委托不就是C++中的函数指针嘛。于是，对于上述if-else，便有解了。</p><p>我们只需要写一个委托，对应创建一个数组对象，每个跳转类型封装一个方法，再用委托来回调，这样的代码，主方法里只需1行就搞定。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using UnityEngine.UI;</span><br><span class="line"></span><br><span class="line">public class UICityRichLevelItem : ScreenBaseHandler</span><br><span class="line">&#123;</span><br><span class="line">    //public RawImage imgIcon;</span><br><span class="line">    public Text textProgress;</span><br><span class="line">    public Text textDegreeOfCompletion;</span><br><span class="line">    public Slider slideProgress;</span><br><span class="line">    public GameObject imgBg;</span><br><span class="line">    public GameObject imgCompleteFinish;</span><br><span class="line">    public GameObject imgCompleteGoto;</span><br><span class="line">    public UI_Event btnGoto;</span><br><span class="line">    public GameObject imgCompleteDelivery;</span><br><span class="line">    public UI_Event btnDelivery;</span><br><span class="line">    private int typeId;</span><br><span class="line">    private int taskId;</span><br><span class="line">    private bool isDelivery;</span><br><span class="line"></span><br><span class="line">    private string TaskDescription;</span><br><span class="line">    private int allNum;</span><br><span class="line">    private int submitId;   //需要提交的id</span><br><span class="line">    private const int NumOfTaskTypes = 9;   //任务种类数量</span><br><span class="line">    private const int DeliveryOfGoodsTaskId = 9;    //提交货物类型id</span><br><span class="line"></span><br><span class="line">    private delegate void JumpTask();</span><br><span class="line">    JumpTask [] jumpTask = new JumpTask[NumOfTaskTypes];</span><br><span class="line"></span><br><span class="line">    public override void Init()</span><br><span class="line">    &#123;</span><br><span class="line">        isDelivery = false;</span><br><span class="line">        allNum = 0;</span><br><span class="line">        submitId = 0;</span><br><span class="line">        btnGoto.onClick = (eventData, ev) =&gt; BtnGotoOnClick();</span><br><span class="line">        btnDelivery.onClick = (eventData, ev) =&gt; BtnDeliveryOnClick();</span><br><span class="line"></span><br><span class="line">        jumpTask[0] = new JumpTask(JumpTaskType_0);</span><br><span class="line">        jumpTask[1] = new JumpTask(JumpTaskType_1);</span><br><span class="line">        jumpTask[2] = new JumpTask(JumpTaskType_2);</span><br><span class="line">        jumpTask[3] = new JumpTask(JumpTaskType_3);</span><br><span class="line">        jumpTask[4] = new JumpTask(JumpTaskType_4);</span><br><span class="line">        jumpTask[5] = new JumpTask(JumpTaskType_5);</span><br><span class="line">        jumpTask[6] = new JumpTask(JumpTaskType_6);</span><br><span class="line">        jumpTask[7] = new JumpTask(JumpTaskType_7);</span><br><span class="line">        jumpTask[8] = new JumpTask(JumpTaskType_8);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void SetItem (TableCityRichEvent.Data next)</span><br><span class="line">    &#123;</span><br><span class="line">        taskId = next.mId;</span><br><span class="line">        typeId = next.mFunctionType;</span><br><span class="line">        if (next.mFunctionParameter.Count == 1)</span><br><span class="line">        &#123;</span><br><span class="line">            allNum = next.mFunctionParameter[0];</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            submitId = next.mFunctionParameter[0];</span><br><span class="line">            allNum = next.mFunctionParameter[1];</span><br><span class="line">        &#125;</span><br><span class="line">        TaskDescription = next.mEventsDes;</span><br><span class="line">        textDegreeOfCompletion.text = &quot;0/&quot; + allNum;</span><br><span class="line">        textProgress.text = JointStr(TaskDescription, textDegreeOfCompletion.text);</span><br><span class="line">        slideProgress.maxValue = allNum;</span><br><span class="line">        slideProgress.value = 0;</span><br><span class="line">        if (isDeliveryOfGoodsTask())</span><br><span class="line">        &#123;</span><br><span class="line">            int num = StorageManager.instance.GetAllCommodityUnlockNumById(submitId);</span><br><span class="line">            textDegreeOfCompletion.text = num + &quot;/&quot; + allNum;</span><br><span class="line">            textProgress.text = JointStr(TaskDescription, textDegreeOfCompletion.text);</span><br><span class="line">            slideProgress.value = num &gt; allNum ? allNum : num;</span><br><span class="line">        &#125;</span><br><span class="line">        isCompleted(allNum, (int)slideProgress.value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int GetTypeItem()</span><br><span class="line">    &#123;</span><br><span class="line">        return typeId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public bool HasChecked()</span><br><span class="line">    &#123;</span><br><span class="line">        return isDelivery;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public bool SetCurNum (int curNum)</span><br><span class="line">    &#123;</span><br><span class="line">        if (!isDeliveryOfGoodsTask())</span><br><span class="line">        &#123;</span><br><span class="line">            slideProgress.value = curNum;</span><br><span class="line">            textDegreeOfCompletion.text = curNum + &quot;/&quot; + allNum;</span><br><span class="line">            textProgress.text = JointStr(TaskDescription, textDegreeOfCompletion.text);</span><br><span class="line">        &#125;</span><br><span class="line">        if (curNum &gt;= allNum)</span><br><span class="line">        &#123;</span><br><span class="line">            isDelivery = true;</span><br><span class="line">            slideProgress.value = curNum;</span><br><span class="line">        &#125;</span><br><span class="line">        isCompleted(allNum, curNum);</span><br><span class="line">        return curNum &gt;= allNum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private string JointStr(string str1, string str2)</span><br><span class="line">    &#123;</span><br><span class="line">        return str1 + &quot;  &quot; + str2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void isCompleted(int maxx, int cur)</span><br><span class="line">    &#123;</span><br><span class="line">        if (isDeliveryOfGoodsTask())</span><br><span class="line">        &#123;</span><br><span class="line">            imgCompleteDelivery.SetActive(!isDelivery);</span><br><span class="line">            imgCompleteGoto.SetActive(false);</span><br><span class="line">            imgCompleteFinish.SetActive(isDelivery);</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            imgCompleteDelivery.SetActive(false);</span><br><span class="line">            imgCompleteGoto.SetActive(maxx &gt; cur);</span><br><span class="line">            imgCompleteFinish.SetActive(maxx &lt;= cur);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public bool isDeliveryOfGoodsTask()</span><br><span class="line">    &#123;</span><br><span class="line">        return TaskHash(typeId) == DeliveryOfGoodsTaskId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void BtnGotoOnClick()</span><br><span class="line">    &#123;</span><br><span class="line">        jumpTask[TaskHash(typeId)]();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void SetBg(bool flag)</span><br><span class="line">    &#123;</span><br><span class="line">        imgBg.SetActive(flag);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void BtnDeliveryOnClick()</span><br><span class="line">    &#123;</span><br><span class="line">        int num = StorageManager.instance.GetAllCommodityUnlockNumById(submitId);</span><br><span class="line">        if (isDelivery == false &amp;&amp; num &gt;= allNum)</span><br><span class="line">        &#123;</span><br><span class="line">            TCPNetworkAttribute.Instance.ReqRichlevelSubmit(taskId);</span><br><span class="line">            UIPlayerInfo item = MenuManager.instance.FindMenu&lt;UIPlayerInfo&gt;();</span><br><span class="line">            item.Init();</span><br><span class="line">            //isDelivery = true;</span><br><span class="line">            //SetCurNum(allNum);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private int TaskHash(int id)</span><br><span class="line">    &#123;</span><br><span class="line">        return id / 1000;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void JumpTaskType_0()        //默认</span><br><span class="line">    &#123;</span><br><span class="line">        UIPlayerInfo item = MenuManager.instance.FindMenu&lt;UIPlayerInfo&gt;();</span><br><span class="line">        item.Init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void JumpTaskType_1()        //出航</span><br><span class="line">    &#123;</span><br><span class="line">        if (TaskHash(typeId) == 1)</span><br><span class="line">        &#123;</span><br><span class="line">            int[] types = &#123;</span><br><span class="line">                (int)IntentionType.Fishing,</span><br><span class="line">                (int)IntentionType.Fishing,</span><br><span class="line">                (int)IntentionType.Merchant,</span><br><span class="line">                (int)IntentionType.Explore</span><br><span class="line">            &#125;;   //捕鱼，战峙，贸易，探索</span><br><span class="line">            UISetOut_MainPage.intentionType = (IntentionType)types[typeId % 1000 - 1];</span><br><span class="line">        &#125;</span><br><span class="line">        UISetOut_MainPage config = MenuManager.instance.CreateMenu&lt;UISetOut_MainPage&gt;();</span><br><span class="line">        config.OpenScreen();</span><br><span class="line">        UIPlayerInfo item = MenuManager.instance.FindMenu&lt;UIPlayerInfo&gt;();</span><br><span class="line">        item.CloseScreen();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void JumpTaskType_2()        //建造</span><br><span class="line">    &#123;</span><br><span class="line">        UIBuildingHandle config = MenuManager.instance.CreateMenu&lt;UIBuildingHandle&gt;();</span><br><span class="line">        config.OpenScreen();</span><br><span class="line">        UIPlayerInfo item = MenuManager.instance.FindMenu&lt;UIPlayerInfo&gt;();</span><br><span class="line">        item.CloseScreen();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void JumpTaskType_3()        //更路簿</span><br><span class="line">    &#123;</span><br><span class="line">        UILinkDistrict config = MenuManager.instance.CreateMenu&lt;UILinkDistrict&gt;();</span><br><span class="line">        config.OpenScreen();</span><br><span class="line">        UIPlayerInfo item = MenuManager.instance.FindMenu&lt;UIPlayerInfo&gt;();</span><br><span class="line">        item.CloseScreen();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void JumpTaskType_4()        //易市</span><br><span class="line">    &#123;</span><br><span class="line">        UIMarketHandle config = MenuManager.instance.CreateMenu&lt;UIMarketHandle&gt;();</span><br><span class="line">        config.OpenScreen();</span><br><span class="line">        UIPlayerInfo item = MenuManager.instance.FindMenu&lt;UIPlayerInfo&gt;();</span><br><span class="line">        item.CloseScreen();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void JumpTaskType_5()        //区域解锁</span><br><span class="line">    &#123;</span><br><span class="line">        UIUnLockZoneHandle handle = MenuManager.instance.CreateMenu&lt;UIUnLockZoneHandle&gt;();</span><br><span class="line">        TableLockZone.Data mTableData = null;</span><br><span class="line">        List&lt;TableLockZone.Data&gt; lst_zone_table = TableManager.instance.GetLockZoneAll();</span><br><span class="line">        int i = 0;</span><br><span class="line">        for (; i &lt; lst_zone_table.Count; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            mTableData = lst_zone_table[i];</span><br><span class="line">            int id = mTableData.mId;</span><br><span class="line">            if (LockZoneManager.instance.IsReadyZoneUnlock(id))</span><br><span class="line">            &#123;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if (i &lt; lst_zone_table.Count &amp;&amp; mTableData != null)</span><br><span class="line">        &#123;</span><br><span class="line">            handle.SetZone(mTableData);</span><br><span class="line">            handle.OpenScreen();</span><br><span class="line">        &#125;</span><br><span class="line">        UIPlayerInfo item = MenuManager.instance.FindMenu&lt;UIPlayerInfo&gt;();</span><br><span class="line">        item.CloseScreen();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void JumpTaskType_6()        //船坞</span><br><span class="line">    &#123;</span><br><span class="line">        UIShipHouseHandle config = MenuManager.instance.CreateMenu&lt;UIShipHouseHandle&gt;();</span><br><span class="line">        //config.gameObject.transform.Find(&quot;Canvas&quot;).GetComponent&lt;Canvas&gt;().sortingOrder = 3;</span><br><span class="line">        config.OpenScreen();</span><br><span class="line">        UIPlayerInfo item = MenuManager.instance.FindMenu&lt;UIPlayerInfo&gt;();</span><br><span class="line">        item.CloseScreen();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void JumpTaskType_7()        //广场</span><br><span class="line">    &#123;</span><br><span class="line">        UIPiazzaHandle config = MenuManager.instance.CreateMenu&lt;UIPiazzaHandle&gt;();</span><br><span class="line">        BuildingControl control = BuildingManager.instance.GetBuildingControlByTableId(12);</span><br><span class="line">        config.InitFactory(control);</span><br><span class="line">        config.OpenScreen();</span><br><span class="line">        UIPlayerInfo item = MenuManager.instance.FindMenu&lt;UIPlayerInfo&gt;();</span><br><span class="line">        item.CloseScreen();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void JumpTaskType_8()        //人物等级</span><br><span class="line">    &#123;</span><br><span class="line">        UIPlayerInfo item = MenuManager.instance.FindMenu&lt;UIPlayerInfo&gt;();</span><br><span class="line">        item.Init();</span><br><span class="line">        item.OpenScreen(0);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有没有发现，和设计模式中的工厂方法模式有异曲同工之妙呢。日后维护起来也方便许多。</p><p>接下来我们详细介绍下C#中的委托吧。</p><h1 id="C-委托（Delegate）"><a href="#C-委托（Delegate）" class="headerlink" title="C# 委托（Delegate）"></a>C# 委托（Delegate）</h1><p>C# 中的委托（Delegate）类似于 C 或 C++ 中函数的指针。<strong>委托（Delegate）</strong> 是存有对某个方法的引用的一种引用类型变量。引用可在运行时被改变。</p><p>委托（Delegate）特别用于实现事件和回调方法。所有的委托（Delegate）都派生自 <strong>System.Delegate</strong> 类。</p><h2 id="声明委托（Delegate）"><a href="#声明委托（Delegate）" class="headerlink" title="声明委托（Delegate）"></a>声明委托（Delegate）</h2><p>委托声明决定了可由该委托引用的方法。委托可指向一个与其具有相同标签的方法。</p><p>例如，假设有一个委托：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public delegate int MyDelegate (string s);</span><br></pre></td></tr></table></figure><p>上面的委托可被用于引用任何一个带有一个单一的 <em>string</em> 参数的方法，并返回一个 <em>int</em> 类型变量。</p><p>声明委托的语法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delegate &lt;return type&gt; &lt;delegate-name&gt; &lt;parameter list&gt;</span><br></pre></td></tr></table></figure><h2 id="实例化委托（Delegate）"><a href="#实例化委托（Delegate）" class="headerlink" title="实例化委托（Delegate）"></a>实例化委托（Delegate）</h2><p>一旦声明了委托类型，委托对象必须使用 <strong>new</strong> 关键字来创建，且与一个特定的方法有关。当创建委托时，传递到 <strong>new</strong> 语句的参数就像方法调用一样书写，但是不带有参数。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public delegate void printString(string s);</span><br><span class="line">...</span><br><span class="line">printString ps1 = new printString(WriteToScreen);</span><br><span class="line">printString ps2 = new printString(WriteToFile);</span><br></pre></td></tr></table></figure><p>下面的实例演示了委托的声明、实例化和使用，该委托可用于引用带有一个整型参数的方法，并返回一个整型值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">delegate int NumberChanger(int n);</span><br><span class="line">namespace DelegateAppl&#123;</span><br><span class="line">   class TestDelegate</span><br><span class="line">   &#123;  </span><br><span class="line">   static int num = 10;  </span><br><span class="line">   public static int AddNum(int p)  &#123; </span><br><span class="line">   num += p; return num;</span><br><span class="line">   &#125;</span><br><span class="line">   public static int MultNum(int q)  &#123;</span><br><span class="line">   num *= q; return num;</span><br><span class="line">   &#125;</span><br><span class="line">   public static int getNum()  &#123;</span><br><span class="line">   return num;</span><br><span class="line">   &#125;</span><br><span class="line">   static void Main(string[] args)  &#123; // 创建委托实例</span><br><span class="line">   NumberChanger nc1 = new NumberChanger(AddNum);</span><br><span class="line">   NumberChanger nc2 = new NumberChanger(MultNum); // 使用委托对象调用方法</span><br><span class="line">   nc1(25);</span><br><span class="line">   Console.WriteLine(&quot;Value of Num: &#123;0&#125;&quot;, getNum());</span><br><span class="line">   nc2(5);</span><br><span class="line">   Console.WriteLine(&quot;Value of Num: &#123;0&#125;&quot;, getNum()); Console.ReadKey();</span><br><span class="line">   &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Value of Num: 35</span><br><span class="line">Value of Num: 175</span><br></pre></td></tr></table></figure><h2 id="委托的多播（Multicasting-of-a-Delegate）"><a href="#委托的多播（Multicasting-of-a-Delegate）" class="headerlink" title="委托的多播（Multicasting of a Delegate）"></a>委托的多播（Multicasting of a Delegate）</h2><p>委托对象可使用 “+” 运算符进行合并。一个合并委托调用它所合并的两个委托。只有相同类型的委托可被合并。”-“ 运算符可用于从合并的委托中移除组件委托。</p><p>使用委托的这个有用的特点，您可以创建一个委托被调用时要调用的方法的调用列表。这被称为委托的 <strong>多播（multicasting）</strong>，也叫组播。下面的程序演示了委托的多播：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">delegate int NumberChanger(int n); namespace DelegateAppl</span><br><span class="line">&#123;</span><br><span class="line">    class TestDelegate</span><br><span class="line">    &#123;</span><br><span class="line">        static int num = 10; public static int AddNum(int p) &#123; num += p; return num; &#125;</span><br><span class="line">        public static int MultNum(int q) &#123; num *= q; return num; &#125;</span><br><span class="line">        public static int getNum() &#123; return num; &#125;</span><br><span class="line">        static void Main(string[] args)</span><br><span class="line">        &#123; // 创建委托实例</span><br><span class="line">            NumberChanger nc;</span><br><span class="line">            NumberChanger nc1 = new NumberChanger(AddNum);</span><br><span class="line">            NumberChanger nc2 = new NumberChanger(MultNum);</span><br><span class="line">            nc = nc1; nc += nc2; // 调用多播</span><br><span class="line">            nc(5);</span><br><span class="line">            Console.WriteLine(&quot;Value of Num: &#123;0&#125;&quot;, getNum());</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Value of Num: 75</span><br></pre></td></tr></table></figure><h2 id="委托（Delegate）的用途"><a href="#委托（Delegate）的用途" class="headerlink" title="委托（Delegate）的用途"></a>委托（Delegate）的用途</h2><p>下面的实例演示了委托的用法。委托 <em>printString</em> 可用于引用带有一个字符串作为输入的方法，并不返回任何东西。</p><p>我们使用这个委托来调用两个方法，第一个把字符串打印到控制台，第二个把字符串打印到文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.IO;</span><br><span class="line">namespace DelegateAppl</span><br><span class="line">&#123;</span><br><span class="line">    class PrintString</span><br><span class="line">    &#123;</span><br><span class="line">        static FileStream fs; static StreamWriter sw;  // 委托声明</span><br><span class="line">        public delegate void printString(string s);  // 该方法打印到控制台</span><br><span class="line">        public static void WriteToScreen(string str) &#123;</span><br><span class="line">            Console.WriteLine(&quot;The String is: &#123;0&#125;&quot;, str);</span><br><span class="line">        &#125;  // 该方法打印到文件</span><br><span class="line">        public static void WriteToFile(string s)  &#123;</span><br><span class="line">            fs = new FileStream(&quot;c:\\message.txt&quot;, FileMode.Append, FileAccess.Write);</span><br><span class="line">            sw = new StreamWriter(fs); sw.WriteLine(s); sw.Flush(); sw.Close(); fs.Close();</span><br><span class="line">        &#125;  // 该方法把委托作为参数，并使用它调用方法</span><br><span class="line">        public static void sendString(printString ps)  &#123;</span><br><span class="line">            ps(&quot;Hello World&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        static void Main(string[] args)  &#123;</span><br><span class="line">            printString ps1 = new printString(WriteToScreen);</span><br><span class="line">            printString ps2 = new printString(WriteToFile);</span><br><span class="line">            sendString(ps1); sendString(ps2);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The String is: Hello World</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在玩游戏时，常常会有任务跳转。但当跳转类型过多时，对游戏研发者来说，就是一件头疼的事了。之前在做游戏城镇等级模块时，就遇到了任务跳转过多的问题。刚接到任务跳转这个需求时，由于入门未深，便用if-else写的。可以想象一百多行的if-else或者switch是多么壮观啊。。。
      
    
    </summary>
    
      <category term="程序人生" scheme="http://qianyouyou.cn/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/"/>
    
      <category term="C#" scheme="http://qianyouyou.cn/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/C/"/>
    
    
      <category term="Unity3D" scheme="http://qianyouyou.cn/tags/Unity3D/"/>
    
      <category term="Unity" scheme="http://qianyouyou.cn/tags/Unity/"/>
    
      <category term="C#" scheme="http://qianyouyou.cn/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>宽敞的心态，宽敞的世界</title>
    <link href="http://qianyouyou.cn/2019/07/28/2019-07-28/"/>
    <id>http://qianyouyou.cn/2019/07/28/2019-07-28/</id>
    <published>2019-07-28T06:00:49.000Z</published>
    <updated>2019-08-28T12:56:10.925Z</updated>
    
    <content type="html"><![CDATA[<p>忽然发现，来上海也有一段时间了。</p><p>还记得没来上海时，身边回荡着各种声音，上了年纪的长辈们鼓励我年轻人就应该出去闯一闯；父母则是抱着忧虑的念头，总说大城市生活压力大，骗子多，无时无刻都得防备；朋友们相对而言更担心的是我一个人出远门的安全。那时候，心中荡漾的，不清楚是期待，还是恐惧。</p><p>初来上海时，东奔西跑的找房租房，生活上高昂的消费让自己不得不开始学会记录支出，还有工作上初来乍到的各种不适应，总弄得自己身心疲惫；那时候，为最后一个挤上公交地铁而庆幸，为了早起而不得不早睡的无奈。心中徘徊的，应该是厌倦，还有抱怨吧。</p><p>现在呢，发现人们口中的大城市，并没有像人们所描述的那么繁华，也没有人们所描述的那样让人苦不堪言。渐渐地，我发现自己爱上了这里。</p><p>其实啊，上海没变，世界也没变，只有我们的心态变了。</p><p>就像人们议论程序员这个行业，一提到程序员，最多的话题就是996，也就是朝九晚九，每周6天。听到这词，即使没有工作，也难免会让人感觉疲惫。但是，真的如此吗。就像我，工作一段时间，感觉每天都很充实。每周有两天双休，但每次到了双休，玩一天游戏，或者什么也不干，剩下的只有空虚，所以周末能加班就加班，因为加班使自己感到生活的充实与价值。</p><p>还记得刚来学校时，因为热爱编程，而报了计算机专业。那时候，没日没夜敲代码是我的快乐。快找实习时，也是没日没夜敲代码，只是感觉到的是苦涩。而工作一段时间后，当我又开始忙碌地敲代码时，感觉到的是充实。同样是敲代码，在学校时因为热爱，在找实习时因为迷茫和环境的影响而决定苦涩，现在，是找到了方向。所以，所谓的忙碌，只不过是旁观者的看法。当一个人真正热爱自己的工作时，别人不要求你加班，你也想自己去加班。</p><p>人们都说上海节奏快，但我坚信时代造英雄。</p><p>昨天父亲又给我打了个电话，尽管只是平常地问候，但我却草草结束了话题。我后来发现，渐渐地，我越来越不怎么和父亲说话了。因为每次父亲跟我洽谈，总是告诫我一些关于社会让人多么的无奈，或者大城市节奏太快压力太大，亦或是社会上到处都是坏人，即使同一屋檐下也要上一把锁。这并不是我父亲一个人的想法，而是我们那个小城镇普遍的想法。</p><p>受我父亲的影响，刚上大学时，因为父亲说西安是贼城，当时我坐个公交都得把包背到前面。但久而久之，我发现并不是所有人都是坏人，那些不美好只不过是世界的冰山一角，但更多地是世界的美好，许多人身上都是有光的。只是这冰山一角给人的心理带来了防备，但当我们以这冰山一角来定义世界时，将必定错过整个世界。</p><p>2G时代，将互联网带上中国，成就了搜狐、新浪、网易。3G时代，将互联网带到了生活，成就了百度、阿里、腾讯，号称BAT。4G时代，将互联网带到了人们随身携带的手机，成就了头条、美团、滴滴，号称TMD。如今5G时代的到来，一切皆有可能，如果还停留在旧时代的舒适圈，不肯加快脚步，那么城乡差距就会越来越大。</p><p>放宽心态，多看看世界好的一面，那么哪来那么多烦恼呢。</p><p>如今，我每周周末都会去公寓周围的大超市去逛逛，有时候什么也不买，仅仅是因为里面的音乐让自己舒心。感受了一周的充实，偶尔给自己放个小假，你会发现，生活并不单调。</p><p>追随时代的大步伐，难免会疲惫。偶尔停下脚步，慢下来，感受自己心中所聆听到的声音，你会发现，快节奏的生活，也会有慢下来的情调。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;忽然发现，来上海也有一段时间了。&lt;/p&gt;
&lt;p&gt;还记得没来上海时，身边回荡着各种声音，上了年纪的长辈们鼓励我年轻人就应该出去闯一闯；父母则是抱着忧虑的念头，总说大城市生活压力大，骗子多，无时无刻都得防备；朋友们相对而言更担心的是我一个人出远门的安全。那时候，心中荡漾的，不清
      
    
    </summary>
    
      <category term="心路历程" scheme="http://qianyouyou.cn/categories/%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B/"/>
    
      <category term="散文" scheme="http://qianyouyou.cn/categories/%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B/%E6%95%A3%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>风往何处吹</title>
    <link href="http://qianyouyou.cn/2019/07/08/2019-07-08/"/>
    <id>http://qianyouyou.cn/2019/07/08/2019-07-08/</id>
    <published>2019-07-08T14:07:46.000Z</published>
    <updated>2019-07-08T14:09:51.832Z</updated>
    
    <content type="html"><![CDATA[<p>浅悠悠 7-8</p><p>我不知道，<br>风在往何处吹，<br>吹散了无根的枝叶，<br>还有七月的蔷薇。</p><p>我不知道，<br>风会往何处吹。<br>吹向那紫陌的寂寥，<br>还是霓虹的余辉。</p><p>我不知道，<br>风该往何处吹。<br>吹散那远方的清梦，<br>还是脚下的尘灰。</p><p>我不知道，<br>风向往何处吹。<br>吹向了温存的故事，<br>还有光阴的慈悲。</p><p>我不知道，<br>我什么也不知道。</p><p>也许只有风儿知道方向，<br>那我便化作海浪随风依洄。<br>也许风儿也不知道方向，<br>那我将像那尘埃何处可归。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;浅悠悠 7-8&lt;/p&gt;
&lt;p&gt;我不知道，&lt;br&gt;风在往何处吹，&lt;br&gt;吹散了无根的枝叶，&lt;br&gt;还有七月的蔷薇。&lt;/p&gt;
&lt;p&gt;我不知道，&lt;br&gt;风会往何处吹。&lt;br&gt;吹向那紫陌的寂寥，&lt;br&gt;还是霓虹的余辉。&lt;/p&gt;
&lt;p&gt;我不知道，&lt;br&gt;风该往何处吹。&lt;br&gt;吹散那远
      
    
    </summary>
    
      <category term="诗词歌赋" scheme="http://qianyouyou.cn/categories/%E8%AF%97%E8%AF%8D%E6%AD%8C%E8%B5%8B/"/>
    
      <category term="摘星集" scheme="http://qianyouyou.cn/categories/%E8%AF%97%E8%AF%8D%E6%AD%8C%E8%B5%8B/%E6%91%98%E6%98%9F%E9%9B%86/"/>
    
    
      <category term="诗集" scheme="http://qianyouyou.cn/tags/%E8%AF%97%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>微信数据分析笔记</title>
    <link href="http://qianyouyou.cn/2019/06/24/2019-06-24/"/>
    <id>http://qianyouyou.cn/2019/06/24/2019-06-24/</id>
    <published>2019-06-24T00:48:36.000Z</published>
    <updated>2019-06-26T01:35:41.751Z</updated>
    
    <content type="html"><![CDATA[<h1 id="6月24日"><a href="#6月24日" class="headerlink" title="6月24日"></a>6月24日</h1><h2 id="项目需求分析"><a href="#项目需求分析" class="headerlink" title="项目需求分析"></a>项目需求分析</h2><p>1、男女性别比例</p><p>2、各省好友数量</p><p>3、个性签名云图</p><h2 id="第三方库"><a href="#第三方库" class="headerlink" title="第三方库"></a>第三方库</h2><h3 id="pyecharts"><a href="#pyecharts" class="headerlink" title="pyecharts"></a>pyecharts</h3><p>一个商业级图表，纯Js图表库。用于生成Echarts图表的类库。</p><h3 id="jieba"><a href="#jieba" class="headerlink" title="jieba"></a>jieba</h3><p>中文分词组件。</p><h3 id="scipy"><a href="#scipy" class="headerlink" title="scipy"></a>scipy</h3><p>工程设计的Python工具包。包括统计、优化、整合、线性代数模块、傅里叶变换、信号和图像处理、长积分方程求解器等等。</p><h3 id="wordcloud"><a href="#wordcloud" class="headerlink" title="wordcloud"></a>wordcloud</h3><p>Python词云展示库，在一段文本中提取关键词进行扁平化的展示，更能吸引目标客户的眼球。</p><h3 id="wxpy"><a href="#wxpy" class="headerlink" title="wxpy"></a>wxpy</h3><p>微信个人API</p><h3 id="re"><a href="#re" class="headerlink" title="re"></a>re</h3><p>Python的re模块提供了诸多正则表达式模块，使Python拥有了全部的正则表达式功能，库1方便检查一个字符串是否与某种模式匹配。</p><h2 id="登录并查看相关信息"><a href="#登录并查看相关信息" class="headerlink" title="登录并查看相关信息"></a>登录并查看相关信息</h2><p>1、登录</p><p>bot = Bot() #扫描二维码自动登录</p><p>2、获取登录账号的所有好友</p><p>bot.friends()</p><p>3、获取当前登录账号所关注的公众号</p><p>bot.mps()</p><p>4、获取当前登录账号群聊列表</p><p>bot.groups()</p><p>5、搜索好友：</p><p>bot.friends().search(‘好友备注名’)[0]</p><p>6、搜索好友并发送消息</p><p>bot.friends().search(‘好友备注名’)[0].send(‘str’)</p><p>7、向文件传输助手发送信息</p><p>bot.fle_helper.send(‘str’)</p><h2 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h2><p>1、每个键值(key:value)对用冒号分隔</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;s = &#123;&apos;name&apos;:&apos;udbs&apos;, &apos;age&apos;:20&#125;</span><br><span class="line">&gt;&gt;&gt;a[&apos;age&apos;]</span><br><span class="line">20</span><br><span class="line">&gt;&gt;&gt;print(a[&apos;age&apos;])</span><br><span class="line">20</span><br></pre></td></tr></table></figure><h3 id="访问字典"><a href="#访问字典" class="headerlink" title="访问字典"></a>访问字典</h3><p>字典名[‘key’]</p><h3 id="修改字典"><a href="#修改字典" class="headerlink" title="修改字典"></a>修改字典</h3><p>字典名[‘key’] = ‘value’</p><h3 id="删除字典"><a href="#删除字典" class="headerlink" title="删除字典"></a>删除字典</h3><p>1、删除单一元素</p><p>格式：del 字典名[‘key’]</p><p>2、清空所有元素</p><p>格式：字典名.clear()</p><p>3、删除字典</p><p>格式：del 字典名</p><h1 id="6月25日"><a href="#6月25日" class="headerlink" title="6月25日"></a>6月25日</h1><h2 id="读写文件"><a href="#读写文件" class="headerlink" title="读写文件"></a>读写文件</h2><p>open函数，必须先用Python内置的open()函数打开文件，创建一个file对象。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file object = open(file_name[, access_mode][, buffering])</span><br></pre></td></tr></table></figure><h2 id="with-as语句"><a href="#with-as语句" class="headerlink" title="with as语句"></a>with as语句</h2><p>try-finally语句可以处理异常。但较麻烦。</p><p>python提供了with语句语法，来构建对资源创建与释放方法，但功能与try相似。with语句后面跟着open方法，如果有返回值，可以使用as语句赋值给变量，退出时自动调用close。</p><h2 id="re模块"><a href="#re模块" class="headerlink" title="re模块"></a>re模块</h2><p>re.findall()方法</p><p>搜索整个字符串，返回匹配正则表达式的所有内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">re.findall(pattern,string)</span><br></pre></td></tr></table></figure><p>re.compile()方法</p><p>将正则字符串编译成正则表达式对象，以便后期匹配中复用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">re.compile(&apos;正则表达式&apos;)</span><br></pre></td></tr></table></figure><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><ul><li>.匹配除了换行符之外的所有字符。</li><li>d数字</li><li>w字母</li></ul><p>join()方法</p><p>用于将序列中的元素以指定的字符连接生成一个新的字符串</p><h1 id="6月26日"><a href="#6月26日" class="headerlink" title="6月26日"></a>6月26日</h1><h2 id="jieba库"><a href="#jieba库" class="headerlink" title="jieba库"></a>jieba库</h2><ol><li><p>精确模式：jieba.lcut(str)</p><p>试图将语句最精确切分，不存在冗余数据，适合文本分析。</p></li><li><p>全模式：jieba.lcut(str,cut_all=True)</p><p>将与句中所有可能是词的词语都切分出来，速度快，但存在冗余数据</p></li><li><p>搜索引擎模式：jieba.lcut_for_search(str)</p><p>在精确模式的基础上·，对长词再次进行切分。</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; str = &apos;手持两把锟斤拷&apos;</span><br><span class="line">&gt;&gt;&gt; jieba.lcut(str)</span><br><span class="line">[&apos;手持&apos;, &apos;两把&apos;, &apos;锟&apos;, &apos;斤&apos;, &apos;拷&apos;]</span><br><span class="line">&gt;&gt;&gt; str = &apos;手持两把锟斤拷，口中直呼烫烫烫。&apos;</span><br><span class="line">&gt;&gt;&gt; jieba.lcut(str)</span><br><span class="line">[&apos;手持&apos;, &apos;两把&apos;, &apos;锟&apos;, &apos;斤&apos;, &apos;拷&apos;, &apos;，&apos;, &apos;口中&apos;, &apos;直呼&apos;, &apos;烫烫&apos;, &apos;烫&apos;, &apos;。&apos;]</span><br><span class="line">&gt;&gt;&gt; jieba.lcut_for_search(str)</span><br><span class="line">[&apos;手持&apos;, &apos;两把&apos;, &apos;锟&apos;, &apos;斤&apos;, &apos;拷&apos;, &apos;，&apos;, &apos;口中&apos;, &apos;直呼&apos;, &apos;烫烫&apos;, &apos;烫&apos;, &apos;。&apos;]</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h2 id="筛选函数isin-函数"><a href="#筛选函数isin-函数" class="headerlink" title="筛选函数isin()函数"></a>筛选函数isin()函数</h2><h3 id="isin"><a href="#isin" class="headerlink" title="isin()"></a>isin()</h3><p>功能：判断该列元素是否在某一个列表中。是True，否False。</p><h2 id="groupby函数和agg函数"><a href="#groupby函数和agg函数" class="headerlink" title="groupby函数和agg函数"></a>groupby函数和agg函数</h2><p>agg基于列的聚合操作</p><p>groupby基于行</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;6月24日&quot;&gt;&lt;a href=&quot;#6月24日&quot; class=&quot;headerlink&quot; title=&quot;6月24日&quot;&gt;&lt;/a&gt;6月24日&lt;/h1&gt;&lt;h2 id=&quot;项目需求分析&quot;&gt;&lt;a href=&quot;#项目需求分析&quot; class=&quot;headerlink&quot; title=&quot;项
      
    
    </summary>
    
      <category term="程序人生" scheme="http://qianyouyou.cn/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/"/>
    
      <category term="大数据" scheme="http://qianyouyou.cn/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="Python" scheme="http://qianyouyou.cn/tags/Python/"/>
    
      <category term="数据分析" scheme="http://qianyouyou.cn/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
      <category term="大数据" scheme="http://qianyouyou.cn/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb网上购物系统的设计与实现</title>
    <link href="http://qianyouyou.cn/2019/06/02/2019-06-02/"/>
    <id>http://qianyouyou.cn/2019/06/02/2019-06-02/</id>
    <published>2019-06-02T02:20:25.000Z</published>
    <updated>2019-06-09T14:23:55.780Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/qian-youyou/ShoppingNet" target="_blank" rel="noopener">GitHub源码</a></p><p>1 课题简介    </p><p>1.1 背景及研究现状</p><p>在互联网高速发展的时代背景下，网络正以一种前所未有的冲击力在影响着人类的活动，包括人类的生产和日常生活。网络的诞生和发展，颠覆了传统的信息传播方式，冲破了存在于传统交流方式中时间和空间的种种壁垒，极大地改变了人类从物质到精神、从形式到内容、从生产到生活的各种活动，并且给人类带来了新的机遇和挑战。网络购物作为电子商务的一种形式正以其高效、低成本的优势，逐步成为新兴的经营模式和理念，人们已经不再满足用途信息的浏览和发布，而是渴望着能够充分享受网络所带来的更加多的便利。网络购物正适应了当今社会快节奏地生活，使顾客足不出户便可以方便快捷轻松地选购自己喜欢的商品。</p><p>本次网上购物系统基于课程设计以专业综合设计I的设计成果，对其进行Web服务器端功能的扩展与开发，将其设计成一个具有服务器端交互功能的完整的Web应用系统，并完成系统的测试、服务器端的部署与发布。</p><p>1.2 设计内容与设计思路    </p><p>网上购物系统主要是对后台管理和前台操作。后台管理是管理员对本网站的维护，通过商品资料(商品添加、商品修改)，等功能达到对网站的管理。前台操作是用户登录到本网站，可以进行用户注册，通过网站的热门商品推荐或商品分类查找功能实现商品搜索，找到自己想要买的商品，装入购物车，提交定单进行购买。</p><p>网上购物平台的特点是客户和电子商品信息量很大，管理员需要整理的信息很多，为让管理员轻松、方便、快捷的管理，该平台采用符合购买电子商品基本的原则，满足广大客户的日益增长的数量，并达到操作过程中的直观、方便、实用、安全等要求。</p><p>1.3 设计目的及意义</p><p>网上购物系统，是在网络上建立一个虚拟的购物商场，使消费者的购物过程变得轻松、快捷、方便，很适合现代人快节奏的生活；同时又有效的控制“商场”运营的成本，开辟了一个新的销售渠道。 </p><p>网上购物相较于实体店铺有着其独特的优势，首先相较于实体店铺网上店铺所需要的成本很小很多，网上购物不需要考虑门店等等的费用其次网上购物系统不存在店铺打样的问题延长了经营的时间无需专人看店节约成本的同时还能使得效益更大化。</p><p>本系统利用现代化的电子及网络技术，为消费者和企业搭建一个良好的互动平台。让用户享受快捷的购物方式，为企业提供不同于传统销售的崭新的销售模式。 该购物系统是一个中小型的电子商务系统，可以为各类用户提供方便的在线购物环境。用户可以在系统中实现注册、登录、修改个人信息、分类查询商品信息、购物、管理购物车、支付等功能。管理员可以通过后台管理模块实现商品的增删改查、种类的增删改查等，从而实现对于该购物系统的管理。</p><p>2 系统分析与设计</p><p>2.1 可行性分析    </p><p>可行性研究是为了弄清楚系统开发的项目是不是可以实现和值得进行研究的过程，实际上是一次大大简化系统分析和系统设计的过程，所以，进行可执行性的分析是非常必要的，也是很重要的，可行性研究阶段通过对系统目标进行市场调研和技术分析，提出了初步的可行性方案并进行了论证。这里主要从技术可行性、经济可行性以及操作可行性三方面进行分析。</p><p>2.1.1 经济可行性</p><p>该系统硬件只需要一台PC机，而且配置要求不高。软件方面用到的MySQL是免费开源的，Eclipse也是免费使用的，所以开发成本并不高。而该系统若投入运行之后不仅减少了人力、物力而且可以推动电影行业的发展，所带来的收益是巨大的，因此在经济上也是可行的。</p><p>2.1.2 技术可行性</p><p>技术可行性要考虑到现有的技术手段和能力能不能完成系统的开发，以免开发到一半出现现有技术无法解决的问题。本系统主要采用的是JAVAWeb和JSP技术。JAVA语言和JSP都是很成熟的技术，也是世界范围内应用最广泛的技术，所以用它们作为后台和前台的语言是没有任何问题的。而且集成开发工具Eclipse可以解决很多方面的问题，创造了良好的开发环境。由于JSP功能强大，而MySQL灵活易维护在开发方面具有方便快捷、使用灵活的特点，以及目前的广泛实际应用，因此使用JAVAWed、MySQL是开发轻平台的最佳组合从而说明本系统在技术方面可行。</p><p>硬件方面，科技飞速发展的今天，硬件更新的速度越来越快，容量越来越大，可靠性越来越高，价格越来越低，其硬件平台完全能满足此系统的需要。</p><p>2.2 需求分析</p><p>2.2.1 系统设计目标</p><p>此网络购物平台系统旨在为用户提供一个简易的具备一些基本功能的购物系统，通过这个系统用户可以轻松的获得自己想要的商品。存在两种类型用户，普通用户和管理员用户。普通用户在这个系统中注册过后进行登陆此时可以在平台中进行自由的选购自己想要的商品，将选购好的商品加入购物车，如果需要修改可以在购物车中更改所需的商品数量，当选择完成过后可以确认购买，也可以让所选物品一直处在购物车中，等待下次登陆时依然有效。管理员用户可以对商品进行管理，包括商品上架，商品下架，商品查询，商品修改等。</p><p>2.2.2 系统功能需求分析</p><p>（1）用户管理：注册会员、登录、管理员用户校验、激活、退出；</p><p>（2）商品显示：按分类查询商品、通过首页推荐查询商品、展示热门商品、展示最新商品、提交商品到购物车中等；</p><p>（3）购物车管理：向购物车中添加商品、修改购物车中商品数量、删除购物车中商品、我的购物车；</p><p>（4）订单管理：通过购物车中商品生成订单、查看我的订单、查看某个订单的详细、订单支付、确认收货。</p><p>（5）管理员：订单查询、商品和类别的增删改查。</p><p>2.2.3 系统性能需求分析</p><p>用户注册部分需要实时检验用户信息是否合格，否则用户提交后才检验，若不合格需重新填写，用户很快会厌倦，因此Ajax是不错的选择。</p><p>商品部份应该给用户提供推荐，比如最新商品和最热商品，给用户提供访问便利。</p><p>此外，分类部分不常改，且使用频繁，但每次若从数据库中读取会影响效率，因此使用redis缓存数据是个不错的选择，因为大大加快了访问效率。</p><p>订单部分由于支付功能需要第三方平台，所以可不必实现。</p><p>管理员部分需要对订单具有全权访问权限。</p><p>2.3 系统总体设计</p><p>2.3.1 系统总体结构设计</p><p>本项目采取MVC设计模式，分为model，view，controler三层。本项目包含dao，domain，service，web，utils五打包。</p><p>其中web包中包含各种servlet类和前端jsp进行交互，及view层。</p><p>Service为业务逻辑层，控制信息的权限以及信息在数据库与前端的交互，及controler层。Dao中主要负责与数据库进行交互，通过各种sql获取或添加信息到数据库，及model层。</p><p>Domain为基本类，共三大层创建对象进行层与层间的信息交互，作为信息载体的集合而存在。</p><p>Utils包中包含各种工具，例如数据库中的date类型需要string进行转换，或者id的生成，这些工具均包含于utils包中。基本模式如下图：</p><p><img src="file:///C:\Users\DELL\AppData\Local\Temp\ksohtml5384\wps1.jpg" alt="img"> </p><p>图2-1 系统总体结构设计图</p><p>B/S系统架构，简单点就是用户通过访问浏览器输入域名后，转入对应的前端html或jsp，然后通过http或https协议将信息报文传送给服务端，服务端进行相应之后做出一系列对数据或页面的响应。以下是B/S系统架构图。</p><p><img src="file:///C:\Users\DELL\AppData\Local\Temp\ksohtml5384\wps2.jpg" alt="img"> </p><p>图2-2 B/S系统框架图</p><p>2.3.2 系统功能模块设计</p><p>（1）用户注册功能：发送邮件、激活用户、表单的校验、用户的登录功能、自动登录、用户的注销功能</p><p>（2）商品模块：首页热门商品和最新商品功能、商品分类、商品的列表（分页）、商品详细信息、浏览记录功能</p><p>（3）购物车模块：将商品加入购物车、展示购物车功能</p><p>（4）订单模块（多表和事务）：提交订单、展示订单、在线支付</p><p>（5）后台的分类的模块：分类信息的增删改查</p><p>（6）后台的商品模块：商品的信息的增删改查（文件上传）</p><p>（7）后台的订单的模块：所有的订单的信息展示</p><p>2.3.3 主要业务流程</p><p>用户的注册过程：</p><p>是首先进入主界面，点击注册按钮，跳转到注册页面，填写注册信息，ajax判断信息是否合格，然后跳转到注册servlet层，把信息传递给service层，service层通过dao层获取数据库信息，反馈是否成功给servlet层，最终按是否插入成功而跳转到注册成功或失败界面。之后介绍的流程大致如此，及MVC三层模型的传输过程。</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td></td><td><img src="file:///C:\Users\DELL\AppData\Local\Temp\ksohtml5384\wps3.jpg" alt="img"></td></tr></tbody></table><p>图</p><p>2-3 程序包结构图</p><p>主界面显示：</p><p>首先index.jsp加载head.jsp，然后获取最热商品信息与最新商品信息，并显示在主界面，最后加载footer.jsp。</p><p>Head.jsp界面显示：</p><p>首先加载首页，然后访问redis数据库判断是否有种类信息，有则读取，无则访问MySQL数据库，读取数据后放到redis中。</p><p>用户注册分析：</p><p><img src="file:///C:\Users\DELL\AppData\Local\Temp\ksohtml5384\wps4.jpg" alt="img"> </p><p>图2-4 用户注册详情</p><p>商品设计：</p><p><img src="file:///C:\Users\DELL\AppData\Local\Temp\ksohtml5384\wps5.jpg" alt="img"> </p><p>图2-5 商品详情</p><p>通过浏览器访问商城，就相当于超市访问商品，因此我们需要购物车来装载商品以便对所需物品增删改查。<img src="file:///C:\Users\DELL\AppData\Local\Temp\ksohtml5384\wps6.jpg" alt="img"></p><p>图2-6 购物车设计</p><p>订单业务设计：</p><p><img src="file:///C:\Users\DELL\AppData\Local\Temp\ksohtml5384\wps7.jpg" alt="img"> </p><p>图2-7 订单业务设计</p><p>管理员管理流程：</p><p><img src="file:///C:\Users\DELL\AppData\Local\Temp\ksohtml5384\wps8.jpg" alt="img"> </p><p>图2-8 管理员管理</p><p>2.4 系统数据库设计</p><p>2.4.1 数据库概念模型设计</p><p><img src="file:///C:\Users\DELL\AppData\Local\Temp\ksohtml5384\wps9.jpg" alt="img"> </p><p>图2-9  E-R图</p><p>2.4.2数据库逻辑结构设计</p><p>表2-1 category表结构</p><table><thead><tr><th>Column Name</th><th>Date Type</th><th>Width</th><th>空值情况</th></tr></thead><tbody><tr><td>Cid</td><td>varChar</td><td>50</td><td>主关键字</td></tr><tr><td>Cname</td><td>varChar</td><td>20</td><td>默认为空</td></tr></tbody></table><p>表2-2 orderitem表结构</p><table><thead><tr><th>Column Name</th><th>Date Type</th><th>Width</th><th>空值情况</th></tr></thead><tbody><tr><td>itemid</td><td>varChar</td><td>50</td><td>主关键字</td></tr><tr><td>count</td><td>int</td><td>11</td><td>可为空</td></tr><tr><td>subtotal</td><td>double</td><td>0</td><td>可为空</td></tr><tr><td>pid</td><td>varchar</td><td>50</td><td>可为空</td></tr><tr><td>oid</td><td>varchar</td><td>50</td><td>可为空</td></tr></tbody></table><p>表2-3 order表</p><table><thead><tr><th>Column Name</th><th>Date Type</th><th>Width</th><th>空值情况</th></tr></thead><tbody><tr><td>oid</td><td>varChar</td><td>50</td><td>主关键字</td></tr><tr><td>ordertime</td><td>datetime</td><td>0</td><td>可为空</td></tr><tr><td>total</td><td>double</td><td>0</td><td>可为空</td></tr><tr><td>state</td><td>int</td><td>11</td><td>可为空</td></tr><tr><td>address</td><td>varchar</td><td>30</td><td>可为空</td></tr><tr><td>name</td><td>varchar</td><td>20</td><td>可为空</td></tr><tr><td>telephone</td><td>varchar</td><td>20</td><td>可为空</td></tr><tr><td>uid</td><td>varchar</td><td>50</td><td>可为空</td></tr></tbody></table><p>表2-4 product表</p><table><thead><tr><th>Column Name</th><th>Date Type</th><th>Width</th><th>空值情况</th></tr></thead><tbody><tr><td>pid</td><td>varChar</td><td>50</td><td>主关键字</td></tr><tr><td>pname</td><td>Varchar</td><td>20</td><td>可为空</td></tr><tr><td>Market_price</td><td>double</td><td>0</td><td>可为空</td></tr><tr><td>Shop_price</td><td>double</td><td>0</td><td>可为空</td></tr><tr><td>pimage</td><td>varchar</td><td>30</td><td>可为空</td></tr><tr><td>pdate</td><td>date</td><td>20</td><td>可为空</td></tr><tr><td>Is_hot</td><td>int</td><td>20</td><td>可为空</td></tr><tr><td>pdesc</td><td>varchar</td><td>255</td><td>可为空</td></tr><tr><td>pflag</td><td>int</td><td>11</td><td>可为空</td></tr><tr><td>cid</td><td>varchar</td><td>50</td><td>可为空</td></tr></tbody></table><p>表2-5 user表</p><table><thead><tr><th>Column Name</th><th>Date Type</th><th>Width</th><th>空值情况</th></tr></thead><tbody><tr><td>uid</td><td>varChar</td><td>50</td><td>主关键字</td></tr><tr><td>username</td><td>Varchar</td><td>20</td><td>可为空</td></tr><tr><td>password</td><td>Varchar</td><td>20</td><td>可为空</td></tr><tr><td>name</td><td>varchar</td><td>20</td><td>可为空</td></tr><tr><td>email</td><td>varchar</td><td>30</td><td>可为空</td></tr><tr><td>telephone</td><td>varchar</td><td>20</td><td>可为空</td></tr><tr><td>birthday</td><td>date</td><td>0</td><td>可为空</td></tr><tr><td>sex</td><td>varchar</td><td>10</td><td>可为空</td></tr><tr><td>state</td><td>int</td><td>11</td><td>可为空</td></tr><tr><td>code</td><td>varchar</td><td>50</td><td>可为空</td></tr></tbody></table><p>2.4.3 数据库关系设计</p><p><img src="file:///C:\Users\DELL\AppData\Local\Temp\ksohtml5384\wps10.jpg" alt="img"> </p><p>图2-10 数据库关系图</p><p>3  系统详细设计</p><p>3.1 系统开发及运行环境</p><p>3.1.1 软件环境    </p><p>运行环境：Windows操作系统下eclipse</p><p>开发语言：JavaWeb</p><p>数据库：MySQL，redis</p><p>3.1.2 硬件环境    </p><p>阿里云服务器。</p><p>3.2 系统采用的关键技术</p><p>3.2.1页面显示逻辑与业务逻辑相分离</p><p><a href="https://baike.baidu.com/item/MVC" target="_blank" rel="noopener">MVC</a>全名是Model View Controller，是模型(model)－视图(view)－控制器(controller)的缩写，一种软件设计典范，用一种业务逻辑、数据、界面显示分离的方法组织代码，将业务逻辑聚集到一个部件里面，在改进和个性化定制界面及用户交互的同时，不需要重新编写业务逻辑。MVC被独特的发展起来用于映射传统的输入、处理和输出功能在一个逻辑的图形化用户界面的结构中。</p><p>3.2.2数据库连接与访问    </p><p>C3P0是一个开源的JDBC<a href="https://baike.baidu.com/item/%E8%BF%9E%E6%8E%A5%E6%B1%A0/1699713" target="_blank" rel="noopener">连接池</a>，它实现了数据源和JNDI绑定，支持JDBC3规范和JDBC2的标准扩展。</p><p>3.2.3 Ajax异步校验</p><p>通过在后台与服务器进行少量数据交换，Ajax 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。传统的网页（不使用 Ajax）如果需要更新内容，必须重载整个网页页面。</p><p>3.3 系统框架的实现</p><p>本项目采取MVC设计模式，分为model，view，controler三层。本项目包含dao，domain，service，web，utils五大包。</p><p>其中web包中包含各种servlet类和前端jsp进行交互，及view层。</p><p>Service为业务逻辑层，控制信息的权限以及信息在数据库与前端的交互，及controler层。Dao中主要负责与数据库进行交互，通过各种sql获取或添加信息到数据库，及model层。</p><p>Domain为基本类，共三大层创建对象进行层与层间的信息交互，作为信息载体的集合而存在。</p><p>Utils包中包含各种工具，例如数据库中的date类型需要string进行转换，或者id的生成，这些工具均包含于utils包中。</p><p>3.3.1 主要的类与接口</p><p>表3-1 JSP清单</p><table><thead><tr><th>Jsp</th><th>说明</th></tr></thead><tbody><tr><td>admin/home.jsp</td><td>管理员界面</td></tr><tr><td>index.jsp</td><td>主界面</td></tr><tr><td>head.jsp</td><td>头界面</td></tr><tr><td>footer.jsp</td><td>尾界面</td></tr><tr><td>Product_list.jsp</td><td>商品栏界面</td></tr><tr><td>Product_info.jsp</td><td>单项商品信息界面</td></tr><tr><td>order_list.jsp</td><td>订单栏界面</td></tr><tr><td>order_info.jsp</td><td>订单项界面</td></tr><tr><td>cart.jsp</td><td>购物车界面</td></tr><tr><td>login.jsp</td><td>登陆界面</td></tr><tr><td>register.jsp</td><td>注册界面</td></tr></tbody></table><p>表3-2 MVC模式清单</p><table><thead><tr><th>Servlet</th><th>Service</th><th>Dao</th><th>Utils</th><th>Domain</th></tr></thead><tbody><tr><td>AutoLoginFilter</td><td>AdminService</td><td>AdminDao</td><td>BeanFactory</td><td>Cart</td></tr><tr><td>ActiveServlet</td><td>ProductService</td><td>ProductDao</td><td>CommonsUtils</td><td>CartItem</td></tr><tr><td>AdminServlet</td><td>UserService</td><td>UserDao</td><td>DataSourceUtils</td><td>Category</td></tr><tr><td>BaseServlet</td><td>AdminServiceImpl</td><td></td><td>JedisPoolUtils</td><td>Order</td></tr><tr><td>CallbackServlet</td><td></td><td></td><td>MailUtils</td><td>OrderItem</td></tr><tr><td>PrdocutServlet</td><td></td><td></td><td>MD5Utils</td><td>PageBean</td></tr><tr><td>RegisterServlet</td><td></td><td></td><td>PaymentUtil</td><td>Product</td></tr><tr><td>UserServlet</td><td></td><td></td><td></td><td>User</td></tr></tbody></table><p>3.3.2 系统主要配置文件</p><p>c3p0-config.xml负责数据库连接配置。</p><p>redis.properties负责redis端口属性配置。</p><p>Bean.xml配置AdminServiceImpl的清单。</p><p>Web.xml配置jsp清单。</p><p>3.4 具体功能模块的实现    </p><p>3.4.1前台分类信息展示</p><p>在head.jsp中有以下js代码：</p><p><img src="file:///C:\Users\DELL\AppData\Local\Temp\ksohtml5384\wps11.jpg" alt="img"> </p><p>图3-1 主页head栏</p><p>通过Ajax方式，首先访问CategoryServlet中的findCategory()方法，查询并以json格式返回Category的List集合db.cname即是最终导航栏显示的分类信息。</p><p>点击某一个分类后，会访问ProductServlet中的findPage()方法，传递当前页数：1和分类ID：cid。</p><p>3.4.2分类商品的分页展示</p><p><img src="file:///C:\Users\DELL\AppData\Local\Temp\ksohtml5384\wps12.jpg" alt="img"> </p><p>图3-2 分类商品首页图</p><p>Dao层查询每页显示的数据（select * from product where cid = ? limit ?,?），Service层调用Dao后再进行条数页数的设置并封装进javabean，返回给servlet。</p><p>Servlet中的findPage()方法：</p><p>首先获取分类的ID：String cid = request.getParameter(“cid”);</p><p>然后获取当前页数：</p><p>int pageNumber =Integer.parseInt(request.getParameter(“pageNumber”));</p><p>之后设定每页显示的条数，带着参数调用service。将返回的PageBean对象和分类ID存储，供jsp页面使用。</p><p>Service层的findPage()方法：</p><p>List<product> list = pd.findPage(cid,pageNumber,pageSize);</product></p><p>封装的每页显示数据，按总条数和总页数进行封装。然后pageBean按每页显示的数据封装数据。</p><p>Servlet将pagebean存到request域中后，在jsp页面通过jstl遍历展示商品信息：</p><p><img src="file:///C:\Users\DELL\AppData\Local\Temp\ksohtml5384\wps13.jpg" alt="img"> </p><p>图3-3 产品分类显示</p><p><img src="file:///C:\Users\DELL\AppData\Local\Temp\ksohtml5384\wps14.jpg" alt="img"> </p><p>图3-4 产品分类jsp代码</p><p>3.4.3单个商品详情</p><p>在商品列表页面有：</p><p>&lt;ahref=”${pageContext.request.contextPath}/product?method=productList&amp;cid=${cid }¤tPage=${currentPage}”&gt;</p><p>这是定义在每个商品图片上的超链接，点击后访问ProductServlet中的findBypid()方法，查询单个商品的详情。</p><p><img src="file:///C:\Users\DELL\AppData\Local\Temp\ksohtml5384\wps15.jpg" alt="img"> </p><p>图3-5 产品单件商品信息页面</p><p>3.4.4最新和热门商品展示</p><p>首先，每个商品有一个是否热门属性和一个上架时间属性。加载主页面时，会从数据库中读取is_hot为1的所有商品作为热门商品，并加载时间最近的商品作为最新商品。href为${pageContext.request.contextPath}/product?method=productInfo&amp;pid=${hotPro.pid}。项目运行后直接访问ProductServlet中的findByNew()方法，查询最新最热商品信息，然后跳转到/jsp/index.jsp页面进行展示。</p><p><img src="file:///C:\Users\DELL\AppData\Local\Temp\ksohtml5384\wps16.jpg" alt="img"> </p><p>图3-6 热门商品展示</p><p><img src="file:///C:\Users\DELL\AppData\Local\Temp\ksohtml5384\wps17.jpg" alt="img"> </p><p>图3-7 最新商品展示</p><p>4 系统测试 </p><p>4.1 系统测试方法</p><p>测试方法采用了边界值，场景分析，等价类，用jmeter进行接测和压测。</p><p>4.2 系统测试用例</p><p>表4-1 系统测试</p><table><thead><tr><th>测试功能</th><th>测试用例序号</th><th>测试样例</th></tr></thead><tbody><tr><td>按类别查询商品首页</td><td>1</td><td>直接查询</td></tr><tr><td>分页展示分类商品</td><td>2</td><td>按种类添加删除商品信息</td></tr><tr><td>单个商品信息校验</td><td>3</td><td>修改部分商品信息</td></tr><tr><td>最热与最新商品展示</td><td>4</td><td>修改最热属性以及日期</td></tr></tbody></table><p>4.3 系统测试结果</p><p>表4-2 测试结果</p><table><thead><tr><th>测试用例序号</th><th>测试结果</th></tr></thead><tbody><tr><td>1</td><td>成功</td></tr><tr><td>2</td><td>成功</td></tr><tr><td>3</td><td>成功</td></tr><tr><td>4</td><td>成功</td></tr></tbody></table><p>5 总结</p><p>5.1 系统工作总结</p><p>​    我们这次首先应用到了MVC框架一开始使用的时候还有点生疏，但是在熟悉了以后，MVC框架的优点现了出来，它把前后台分开进行处理，我们在写后台逻辑的时候不需要考虑前端网页的布局，在写前端网页的时候也不需要在页面中插入后端的业务逻辑，这样让整个开发的过程变得十分明确，包括在查看源码的时候也不会眼花缭乱，当代码发生错误时，调试起来也能够快速的发现错误点，这是相较于之前没有框架使用的时候所没有的优越之处。同时，我们这次还用了C3P0的数据库池连接，它的优势之处就是比原本单纯的JDBC连接更加快捷，速度更快了。</p><p>5.2 存在的不足及改进</p><p>本系统由于涉及到支付功能，而支付又涉及到现金交易，因此该部分一直没有实现，经查阅资料了解到第三方支付平台的存在，但目前由于第三方支付平台账号问题目前支付功能具体还没有实现。之后会陆续对该部分进行改进。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://github.com/qian-youyou/ShoppingNet&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub源码&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1 课题简介    &lt;/p&gt;
&lt;p&gt;1.1 背景及研究现状&lt;/p&gt;
      
    
    </summary>
    
      <category term="程序人生" scheme="http://qianyouyou.cn/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/"/>
    
      <category term="Java" scheme="http://qianyouyou.cn/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/Java/"/>
    
    
      <category term="Java" scheme="http://qianyouyou.cn/tags/Java/"/>
    
      <category term="MVC" scheme="http://qianyouyou.cn/tags/MVC/"/>
    
      <category term="JavaWeb" scheme="http://qianyouyou.cn/tags/JavaWeb/"/>
    
      <category term="JSP" scheme="http://qianyouyou.cn/tags/JSP/"/>
    
  </entry>
  
  <entry>
    <title>[转]unity pro 2019最新破解版 v2019.1.2f1</title>
    <link href="http://qianyouyou.cn/2019/05/29/2019-05-29/"/>
    <id>http://qianyouyou.cn/2019/05/29/2019-05-29/</id>
    <published>2019-05-29T13:58:15.000Z</published>
    <updated>2019-06-09T14:24:44.535Z</updated>
    
    <content type="html"><![CDATA[<p>由于unity更新，之前v2019.1.0a8破解版本更新为v2019.1.2f1，花了很长时间终于找到了破解方法。如下。</p><p>unity pro 2019破解版，其除了原程序还附带了破解补丁和许可文件，能够免费帮助用户破解得到一个可无限制免费使用所有功能的unity pro 2019，随后在下文会附上破解安装教程。</p><p>unity2019破解版安装说明</p><p>1、下载并解压本站提供的包，其包换了unity pro 2019原程序、破解补丁、许可文件。</p><p>2、先打开文件夹”addons”双击”UnityHubSetup-1.6.2.exe”依提示进行安装Unity Hub。</p><p>3、这里默认路径为【C:\Program Files\Unity Hub】</p><p>4、耐心等待安装完成后先不要运行该软件。</p><p>5、然后双击”UnitySetup64-2019.1.2f1.exe”依提示进行安装开始安装Unity。</p><p>6、这里默认路径为【C:\Program Files\Unity】</p><p>7、这里有点慢，请耐心等待安装。</p><p>8、安装完成后同样先不要运行该软件。</p><p>9、然后将本站提供的文件夹”crack”——“Hub”中的”app.asar”拖至【C:\Program Files\Unity Hub\resources】中并选择复制和替换即可。</p><p>10、接着选择”crack”进入到”Unity”选择用户自己需要的版本。</p><p>11、例如小编这里选择2019.1.0f2，那么就将文件夹里面的”Unity.exe”拖至【C:\Program Files\Unity\Editor】中并选择复制和替换即可。</p><p>12、然后将”2019.1.0f2”文件夹中的”Unity_lic.ulf”许可文件复制到【C:\ProgramData\Unity】中，如果C:驱动器没有ProgramData文件夹，则启用隐藏文件显示。是C:\ProgramData文件夹中没有Unity文件夹，那么就创建一个。</p><p>13、运行”Unity Hub”点击”Locate a Version”</p><p>14、找到unit.exe文件的路径即【C:\Program Files\Unity\Editor】点击”select sditor”</p><p>15、接着需要创建一个用于验证的新项目，点击”new”</p><p>16、安装所需的支持模块和附加组件。</p><p>17、耐心等待即可，到这里就已经全部破解完成了，用户就可以免费无限制使用unity pro 2019破解版了。</p><p><a href="https://pan.baidu.com/s/1Em7dYE8H8Q_EaUhqQIiv-Q?errno=0&amp;errmsg=Auth%20Login%20Sucess&amp;&amp;bduss=&amp;ssnerror=0&amp;traceid=#list/path=%2F" target="_blank" rel="noopener">下载地址</a></p><p><a href="http://www.ddooo.com/softdown/144746.htm#dltab" target="_blank" rel="noopener">教程</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;由于unity更新，之前v2019.1.0a8破解版本更新为v2019.1.2f1，花了很长时间终于找到了破解方法。如下。&lt;/p&gt;
&lt;p&gt;unity pro 2019破解版，其除了原程序还附带了破解补丁和许可文件，能够免费帮助用户破解得到一个可无限制免费使用所有功能的uni
      
    
    </summary>
    
      <category term="程序人生" scheme="http://qianyouyou.cn/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/"/>
    
      <category term="Unity" scheme="http://qianyouyou.cn/categories/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/Unity/"/>
    
    
      <category term="Unity3D" scheme="http://qianyouyou.cn/tags/Unity3D/"/>
    
      <category term="Unity" scheme="http://qianyouyou.cn/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb课程设计之网上商城</title>
    <link href="http://qianyouyou.cn/2019/05/25/2019-05-25/"/>
    <id>http://qianyouyou.cn/2019/05/25/2019-05-25/</id>
    <published>2019-05-25T04:19:27.000Z</published>
    <updated>2019-05-25T04:22:17.971Z</updated>
    
    <content type="html"><![CDATA[<p>最近一堆课设，总结随便写写吧。</p><h1 id="一、功能的演示"><a href="#一、功能的演示" class="headerlink" title="一、功能的演示"></a>一、功能的演示</h1><h3 id="1．用户模块"><a href="#1．用户模块" class="headerlink" title="1．用户模块"></a>1．用户模块</h3><p>用户注册功能</p><p>发送邮件</p><p>激活用户</p><p>表单的校验</p><p>用户的登录功能</p><p>自动登录</p><p>用户的注销功能</p><h3 id="2．商品模块"><a href="#2．商品模块" class="headerlink" title="2．商品模块"></a>2．商品模块</h3><p>首页热门商品和最新商品功能</p><p>商品分类</p><p>商品的列表（分页）</p><p>商品详细信息</p><p>浏览记录功能</p><h3 id="3．购物车模块"><a href="#3．购物车模块" class="headerlink" title="3．购物车模块"></a>3．购物车模块</h3><p>将商品加入购物车</p><p>展示购物车功能</p><h3 id="4．订单模块（多表和事务）"><a href="#4．订单模块（多表和事务）" class="headerlink" title="4．订单模块（多表和事务）"></a>4．订单模块（多表和事务）</h3><p>提交订单</p><p>展示订单</p><p>在线支付</p><h3 id="5．后台的分类的模块"><a href="#5．后台的分类的模块" class="headerlink" title="5．后台的分类的模块"></a>5．后台的分类的模块</h3><p>分类信息的增删改查</p><h3 id="6．后台的商品模块"><a href="#6．后台的商品模块" class="headerlink" title="6．后台的商品模块"></a>6．后台的商品模块</h3><p>商品的信息的增删改查（文件上传）</p><h3 id="7．后台的订单的模块"><a href="#7．后台的订单的模块" class="headerlink" title="7．后台的订单的模块"></a>7．后台的订单的模块</h3><p>所有的订单的信息展示</p><h1 id="二、一般项目开发流程（公司之间是有差异）"><a href="#二、一般项目开发流程（公司之间是有差异）" class="headerlink" title="二、一般项目开发流程（公司之间是有差异）"></a>二、一般项目开发流程（公司之间是有差异）</h1><p>1）确定项目需求—–拿下一个项目</p><p>2）编写《需求说明书》—-不涉及技术，只涉及业务需求</p><p>3）编写《概要设计说明书》—– 涉及技术的的宏观的内容，数据库设计，页面原型</p><p>4）编写《详细设计说明书》—– 相当于伪代码</p><p>5）编码阶段coding—-根据《详细设计说明书》— 单元测试</p><p>6）联测—–项目组内部的行为</p><p>7）测试组进行全面的专业测试—-《测试报告》</p><p>8）上线（测试阶段）</p><p>9）维护和二次开发</p><h1 id="三、网上商城项目的环境的搭建"><a href="#三、网上商城项目的环境的搭建" class="headerlink" title="三、网上商城项目的环境的搭建"></a>三、网上商城项目的环境的搭建</h1><p>(1) 创建项目Shop</p><p>(2) 创建项目的包结构</p><p>(3) 导入需要的jar/配置文件/工具/静态页面</p><p>(4) 编码</p><h1 id="四、业务分析与编码"><a href="#四、业务分析与编码" class="headerlink" title="四、业务分析与编码"></a>四、业务分析与编码</h1><h3 id="1．用户模块—注册"><a href="#1．用户模块—注册" class="headerlink" title="1．用户模块—注册"></a>1．用户模块—注册</h3><h4 id="1-用户注册"><a href="#1-用户注册" class="headerlink" title="(1)用户注册"></a>(1)用户注册</h4><p>基本点注册代码实现</p><p>分析：表单提交数据—-&gt;web层收集数据—-&gt;封装数据—–&gt;传递数据—&gt;三层架    构代码</p><h4 id="2-用户发送邮件"><a href="#2-用户发送邮件" class="headerlink" title="(2)用户发送邮件"></a>(2)用户发送邮件</h4><h4 id="3-用户激活"><a href="#3-用户激活" class="headerlink" title="(3)用户激活"></a>(3)用户激活</h4><p>邮箱中的链接</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td></td><td><img src="file:///C:\Users\DELL\AppData\Local\Temp\ksohtml12844\wps1.jpg" alt="img"></td></tr></tbody></table><p>点击时 访问服务端进行激活功能的ActiveServlet</p><h4 id="4-表单校验"><a href="#4-表单校验" class="headerlink" title="(4)表单校验"></a>(4)表单校验</h4><h4 id="5-短信验证码"><a href="#5-短信验证码" class="headerlink" title="(5)短信验证码"></a>(5)短信验证码</h4><h4 id="6-图片验证码"><a href="#6-图片验证码" class="headerlink" title="(6)图片验证码"></a>(6)图片验证码</h4><p>前台对表单已经进行进行校验了，后台好需要对数据进行校验吗？—-需要！</p><h3 id="2．用户模块—登录"><a href="#2．用户模块—登录" class="headerlink" title="2．用户模块—登录"></a>2．用户模块—登录</h3><h3 id="3．关于servlet的抽取（重构）"><a href="#3．关于servlet的抽取（重构）" class="headerlink" title="3．关于servlet的抽取（重构）"></a>3．关于servlet的抽取（重构）</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近一堆课设，总结随便写写吧。&lt;/p&gt;
&lt;h1 id=&quot;一、功能的演示&quot;&gt;&lt;a href=&quot;#一、功能的演示&quot; class=&quot;headerlink&quot; title=&quot;一、功能的演示&quot;&gt;&lt;/a&gt;一、功能的演示&lt;/h1&gt;&lt;h3 id=&quot;1．用户模块&quot;&gt;&lt;a href=&quot;#1．用户
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>戳气球问题</title>
    <link href="http://qianyouyou.cn/2019/05/20/2019-05-20/"/>
    <id>http://qianyouyou.cn/2019/05/20/2019-05-20/</id>
    <published>2019-05-20T07:02:20.000Z</published>
    <updated>2019-05-20T11:45:25.733Z</updated>
    
    <content type="html"><![CDATA[<p>有 n 个气球，编号为0 到 n-1，每个气球上都标有一个数字，这些数字存在数组 nums 中。</p><p>现在要求你戳破所有的气球。每当你戳破一个气球 i 时，你可以获得 nums[left] * nums[i] * nums[right] 个硬币。 这里的 left 和 right 代表和 i 相邻的两个气球的序号。注意当你戳破了气球 i 后，气球 left 和气球 right 就变成了相邻的气球。</p><p>求所能获得硬币的最大数量。</p><p>说明:</p><p>你可以假设 nums[-1] = nums[n] = 1，但注意它们不是真实存在的所以并不能被戳破。<br>0 ≤ n ≤ 500, 0 ≤ nums[i] ≤ 100<br>示例:</p><p>输入: [3,1,5,8]<br>输出: 167<br>解释: nums = [3,1,5,8] –&gt; [3,5,8] –&gt;   [3,8]   –&gt;  [8]  –&gt; []<br>     coins =  315      +  358    +  138      + 181   = 167</p><p>思路：</p><p>可以利用区间动态规划，dp[i][j]表示i到j之间的最优解（不包括i，j），那么dp[i][j]就等于max(dp[i][j], dp[i][k] + dp[k][j] + nums[i] * nums[j] * nums[k])。</p><p>即我们假设求i到j之间的最优解，k为i和j之间的数，那么当前i到j之间以k为基准将要戳k（也就是k是i到j中最后一个戳的）的最优解就等于k左半部分最优解加k右半部分最优解加k、j、i的乘积，遍历k求出最大的一个就好了。当然dp初始值要为0，这样第一次戳i时dp[i-1][i+1]就理所当然等于0 + nums[i+1] <em> nums[i] </em> nums[i - 1] + 0。</p><p>nums首部先插入1，再在末尾补1。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    int maxCoins(vector&lt;int&gt;&amp; nums) &#123;</span><br><span class="line">        if(nums.empty())&#123;</span><br><span class="line">            return 0;</span><br><span class="line">        &#125;</span><br><span class="line">        nums.insert(nums.begin(), 1);</span><br><span class="line">        nums.push_back(1);</span><br><span class="line">        dp.resize(nums.size(), vector&lt;int&gt;(nums.size(), 0));</span><br><span class="line">        for(int i = 2; i &lt; nums.size(); ++i)&#123;</span><br><span class="line">            for(int j = 0; j + i &lt; nums.size(); ++j)&#123;</span><br><span class="line">                for(int k = j + 1; k &lt; j + i; ++k)&#123;</span><br><span class="line">                    dp[j][j + i] = max(dp[j][j + i], dp[j][k] + dp[k][j + i] + nums[k] * nums[j] * nums[j + i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return dp[0][nums.size() - 1];</span><br><span class="line">    &#125;</span><br><span class="line">private:</span><br><span class="line">    vector&lt;vector&lt;int&gt;&gt;dp;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;有 n 个气球，编号为0 到 n-1，每个气球上都标有一个数字，这些数字存在数组 nums 中。&lt;/p&gt;
&lt;p&gt;现在要求你戳破所有的气球。每当你戳破一个气球 i 时，你可以获得 nums[left] * nums[i] * nums[right] 个硬币。 这里的 left
      
    
    </summary>
    
      <category term="训练之路" scheme="http://qianyouyou.cn/categories/%E8%AE%AD%E7%BB%83%E4%B9%8B%E8%B7%AF/"/>
    
      <category term="动态规划" scheme="http://qianyouyou.cn/categories/%E8%AE%AD%E7%BB%83%E4%B9%8B%E8%B7%AF/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    
      <category term="算法" scheme="http://qianyouyou.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="动态规划" scheme="http://qianyouyou.cn/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="区间dp" scheme="http://qianyouyou.cn/tags/%E5%8C%BA%E9%97%B4dp/"/>
    
  </entry>
  
</feed>
